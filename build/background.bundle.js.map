{"version":3,"file":"background.bundle.js","mappings":"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","sources":["webpack://operand-chrome-extension/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://operand-chrome-extension/webpack/bootstrap","webpack://operand-chrome-extension/./src/storage.ts","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/service-type.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/code.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/message.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/field.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format-common.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/json-format-common.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/names.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/field.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/proto3.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/json-format-proto3.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format-proto3.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/connect-error.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/interceptor.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/envelope.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/http-headers.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/connect-transport.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/assert-fetch-api.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/promise-client.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/connect-web/dist/esm/any-client.js","webpack://operand-chrome-extension/./node_modules/@operandinc/sdk/dist/esm/index.js","webpack://operand-chrome-extension/./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/timestamp_pb.js","webpack://operand-chrome-extension/./node_modules/@operandinc/sdk/dist/esm/operand/v1/object_pb.js","webpack://operand-chrome-extension/./node_modules/@operandinc/sdk/dist/esm/operand/v1/object_connectweb.js","webpack://operand-chrome-extension/./src/pages/Background/index.ts"],"sourcesContent":["var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Function to interact with the storage\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nfunction validateSettings(settings) {\n    return __awaiter(this, void 0, void 0, function () {\n        var booleanSettings, stringSettings, _i, booleanSettings_1, key, _a, stringSettings_1, key;\n        return __generator(this, function (_b) {\n            booleanSettings = [\n                'searchInjectionEnabled',\n                'newTabFeedEnabled',\n                'automaticIndexingEnabled',\n            ];\n            stringSettings = [\n                'apiKey',\n                'automaticIndexingDestination',\n                'manualIndexingMostRecentDestination',\n            ];\n            for (_i = 0, booleanSettings_1 = booleanSettings; _i < booleanSettings_1.length; _i++) {\n                key = booleanSettings_1[_i];\n                // If the setting is defined and is not a boolean\n                if (settings[key] !== undefined && typeof settings[key] !== 'boolean') {\n                    return [2 /*return*/, false];\n                }\n            }\n            for (_a = 0, stringSettings_1 = stringSettings; _a < stringSettings_1.length; _a++) {\n                key = stringSettings_1[_a];\n                // If the setting is defined and is not a string\n                if (settings[key] !== undefined && typeof settings[key] !== 'string') {\n                    return [2 /*return*/, false];\n                }\n            }\n            return [2 /*return*/, true];\n        });\n    });\n}\n// Get the entire settings object\nexport function getSettings() {\n    return __awaiter(this, void 0, void 0, function () {\n        var storage, settings;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, chrome.storage.sync.get('settings')];\n                case 1:\n                    storage = _a.sent();\n                    // Assert that the settings object exists\n                    if (!storage) {\n                        return [2 /*return*/, null];\n                    }\n                    settings = storage.settings;\n                    if (!settings) {\n                        return [2 /*return*/, null];\n                    }\n                    return [4 /*yield*/, validateSettings(settings)];\n                case 2:\n                    // Validate the settings object\n                    if (_a.sent()) {\n                        return [2 /*return*/, settings];\n                    }\n                    else {\n                        return [2 /*return*/, null];\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n// Get a specific setting\nexport function getSetting(key) {\n    return __awaiter(this, void 0, void 0, function () {\n        var settings;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getSettings()];\n                case 1:\n                    settings = _a.sent();\n                    if (!settings) {\n                        return [2 /*return*/, null];\n                    }\n                    return [2 /*return*/, settings[key]];\n            }\n        });\n    });\n}\nexport function getApiKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var key;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getSetting('apiKey')];\n                case 1:\n                    key = _a.sent();\n                    if (!key) {\n                        return [2 /*return*/, null];\n                    }\n                    // Assert that the key is a string\n                    if (typeof key !== 'string') {\n                        return [2 /*return*/, null];\n                    }\n                    // Assert that the key is not empty\n                    if (key.length === 0) {\n                        return [2 /*return*/, null];\n                    }\n                    return [2 /*return*/, key];\n            }\n        });\n    });\n}\nexport function getSearchInjectionEnabled() {\n    return __awaiter(this, void 0, void 0, function () {\n        var enabled;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getSetting('searchInjectionEnabled')];\n                case 1:\n                    enabled = _a.sent();\n                    if (enabled === null) {\n                        return [2 /*return*/, false];\n                    }\n                    // Assert that the key is a string\n                    if (typeof enabled !== 'boolean') {\n                        return [2 /*return*/, false];\n                    }\n                    return [2 /*return*/, enabled];\n            }\n        });\n    });\n}\n// Set the entire settings object\nexport function setSettings(settings) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, validateSettings(settings)];\n                case 1:\n                    if (!_a.sent()) return [3 /*break*/, 3];\n                    return [4 /*yield*/, chrome.storage.sync.set({ settings: settings })];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/, true];\n                case 3: return [2 /*return*/, false];\n            }\n        });\n    });\n}\n// Set a specific setting\nexport function setSetting(key, value) {\n    return __awaiter(this, void 0, void 0, function () {\n        var settings;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getSettings()];\n                case 1:\n                    settings = _a.sent();\n                    if (!settings) {\n                        return [2 /*return*/, false];\n                    }\n                    switch (key) {\n                        case 'searchInjectionEnabled':\n                            if (typeof value !== 'boolean') {\n                                return [2 /*return*/, false];\n                            }\n                            settings.searchInjectionEnabled = value;\n                            break;\n                        case 'newTabFeedEnabled':\n                            if (typeof value !== 'boolean') {\n                                return [2 /*return*/, false];\n                            }\n                            settings.newTabFeedEnabled = value;\n                            break;\n                        case 'apiKey':\n                            if (typeof value !== 'string') {\n                                return [2 /*return*/, false];\n                            }\n                            settings.apiKey = value;\n                            break;\n                        case 'automaticIndexingEnabled':\n                            if (typeof value !== 'boolean') {\n                                return [2 /*return*/, false];\n                            }\n                            settings.automaticIndexingEnabled = value;\n                            break;\n                        case 'automaticIndexingDestination':\n                            if (typeof value !== 'string') {\n                                return [2 /*return*/, false];\n                            }\n                            settings.automaticIndexingDestination = value;\n                            break;\n                        case 'manualIndexingMostRecentDestination':\n                            if (typeof value !== 'string') {\n                                return [2 /*return*/, false];\n                            }\n                            settings.manualIndexingMostRecentDestination = value;\n                            break;\n                        default:\n                            return [2 /*return*/, false];\n                    }\n                    return [4 /*yield*/, setSettings(settings)];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function getRules() {\n    return __awaiter(this, void 0, void 0, function () {\n        var storage, rules;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, chrome.storage.sync.get('rules')];\n                case 1:\n                    storage = _a.sent();\n                    // Assert that the rules object exists\n                    if (!storage) {\n                        return [2 /*return*/, null];\n                    }\n                    rules = storage.rules;\n                    // Validate the rules object\n                    if (Array.isArray(rules)) {\n                        return [2 /*return*/, rules];\n                    }\n                    else {\n                        return [2 /*return*/, null];\n                    }\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function setRules(rules) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, chrome.storage.sync.set({ rules: rules })];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function addRule(rule) {\n    return __awaiter(this, void 0, void 0, function () {\n        var rules;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getRules()];\n                case 1:\n                    rules = _a.sent();\n                    if (!!rules) return [3 /*break*/, 3];\n                    // If there are no rules, create a new array\n                    return [4 /*yield*/, setRules([rule])];\n                case 2:\n                    // If there are no rules, create a new array\n                    _a.sent();\n                    return [3 /*break*/, 5];\n                case 3: \n                // Otherwise, add the rule to the existing array\n                return [4 /*yield*/, setRules(__spreadArray(__spreadArray([], rules, true), [rule], false))];\n                case 4:\n                    // Otherwise, add the rule to the existing array\n                    _a.sent();\n                    _a.label = 5;\n                case 5: return [2 /*return*/, true];\n            }\n        });\n    });\n}\nexport function removeRule(rule) {\n    return __awaiter(this, void 0, void 0, function () {\n        var rules, index;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getRules()];\n                case 1:\n                    rules = _a.sent();\n                    if (!rules) {\n                        return [2 /*return*/, false];\n                    }\n                    index = rules.findIndex(function (r) { return r.domain === rule.domain; });\n                    if (index === -1) {\n                        return [2 /*return*/, false];\n                    }\n                    rules.splice(index, 1);\n                    return [4 /*yield*/, setRules(rules)];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/, true];\n            }\n        });\n    });\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * MethodKind represents the four method types that can be declared in\n * protobuf with the `stream` keyword:\n *\n * 1. Unary:           rpc (Input) returns (Output)\n * 2. ServerStreaming: rpc (Input) returns (stream Output)\n * 3. ClientStreaming: rpc (stream Input) returns (Output)\n * 4. BiDiStreaming:   rpc (stream Input) returns (stream Output)\n */\nexport var MethodKind;\n(function (MethodKind) {\n    MethodKind[MethodKind[\"Unary\"] = 0] = \"Unary\";\n    MethodKind[MethodKind[\"ServerStreaming\"] = 1] = \"ServerStreaming\";\n    MethodKind[MethodKind[\"ClientStreaming\"] = 2] = \"ClientStreaming\";\n    MethodKind[MethodKind[\"BiDiStreaming\"] = 3] = \"BiDiStreaming\";\n})(MethodKind || (MethodKind = {}));\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or just\n * idempotent, or neither? HTTP based RPC implementation may choose GET verb\n * for safe methods, and PUT verb for idempotent methods instead of the\n * default POST.\n *\n * This enum matches the protobuf enum google.protobuf.MethodOptions.IdempotencyLevel,\n * defined in the well-known type google/protobuf/descriptor.proto, but\n * drops UNKNOWN.\n */\nexport var MethodIdempotency;\n(function (MethodIdempotency) {\n    /**\n     * Idempotent, no side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"NoSideEffects\"] = 1] = \"NoSideEffects\";\n    /**\n     * Idempotent, but may have side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"Idempotent\"] = 2] = \"Idempotent\";\n})(MethodIdempotency || (MethodIdempotency = {}));\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Connect represents categories of errors as codes, and each code maps to a\n * specific HTTP status code. The codes and their semantics were chosen to\n * match gRPC. Only the codes below are valid — there are no user-defined\n * codes.\n *\n * See the specification at https://connect.build/docs/protocol#error-codes\n * for details.\n */\nexport var Code;\n(function (Code) {\n    /**\n     * Canceled, usually be the user\n     */\n    Code[Code[\"Canceled\"] = 1] = \"Canceled\";\n    /**\n     * Unknown error\n     */\n    Code[Code[\"Unknown\"] = 2] = \"Unknown\";\n    /**\n     * Argument invalid regardless of system state\n     */\n    Code[Code[\"InvalidArgument\"] = 3] = \"InvalidArgument\";\n    /**\n     * Operation expired, may or may not have completed.\n     */\n    Code[Code[\"DeadlineExceeded\"] = 4] = \"DeadlineExceeded\";\n    /**\n     * Entity not found.\n     */\n    Code[Code[\"NotFound\"] = 5] = \"NotFound\";\n    /**\n     * Entity already exists.\n     */\n    Code[Code[\"AlreadyExists\"] = 6] = \"AlreadyExists\";\n    /**\n     * Operation not authorized.\n     */\n    Code[Code[\"PermissionDenied\"] = 7] = \"PermissionDenied\";\n    /**\n     * Quota exhausted.\n     */\n    Code[Code[\"ResourceExhausted\"] = 8] = \"ResourceExhausted\";\n    /**\n     * Argument invalid in current system state.\n     */\n    Code[Code[\"FailedPrecondition\"] = 9] = \"FailedPrecondition\";\n    /**\n     * Operation aborted.\n     */\n    Code[Code[\"Aborted\"] = 10] = \"Aborted\";\n    /**\n     * Out of bounds, use instead of FailedPrecondition.\n     */\n    Code[Code[\"OutOfRange\"] = 11] = \"OutOfRange\";\n    /**\n     * Operation not implemented or disabled.\n     */\n    Code[Code[\"Unimplemented\"] = 12] = \"Unimplemented\";\n    /**\n     * Internal error, reserved for \"serious errors\".\n     */\n    Code[Code[\"Internal\"] = 13] = \"Internal\";\n    /**\n     * Unavailable, client should back off and retry.\n     */\n    Code[Code[\"Unavailable\"] = 14] = \"Unavailable\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    Code[Code[\"DataLoss\"] = 15] = \"DataLoss\";\n    /**\n     * Request isn't authenticated.\n     */\n    Code[Code[\"Unauthenticated\"] = 16] = \"Unauthenticated\";\n})(Code || (Code = {}));\nexport function codeFromConnectHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 400: // Bad Request\n            return Code.InvalidArgument;\n        case 401: // Unauthorized\n            return Code.Unauthenticated;\n        case 403: // Forbidden\n            return Code.PermissionDenied;\n        case 404: // Not Found\n            return Code.Unimplemented;\n        case 408: // Request Timeout\n            return Code.DeadlineExceeded;\n        case 409: // Conflict\n            return Code.Aborted;\n        case 412: // Precondition Failed\n            return Code.FailedPrecondition;\n        case 413: // Payload Too Large\n            return Code.ResourceExhausted;\n        case 415: // Unsupported Media Type\n            return Code.Internal;\n        case 429: // Too Many Requests\n            return Code.Unavailable;\n        case 431: // Request Header Fields Too Large\n            return Code.ResourceExhausted;\n        case 502: // Bad Gateway\n            return Code.Unavailable;\n        case 503: // Service Unavailable\n            return Code.Unavailable;\n        case 504: // Gateway Timeout\n            return Code.Unavailable;\n        default:\n            return Code.Unknown;\n    }\n}\n// See https://github.com/grpc/grpc/blob/master/doc/http-grpc-status-mapping.md.\nexport function codeFromGrpcWebHttpStatus(httpStatus) {\n    switch (httpStatus) {\n        case 200: // Ok\n            return null;\n        case 400: // Bad Request\n            return Code.Internal;\n        case 401: // Unauthorized\n            return Code.Unauthenticated;\n        case 403: // Forbidden\n            return Code.PermissionDenied;\n        case 404: // Not Found\n            return Code.Unimplemented;\n        case 429: // Too Many Requests\n            return Code.Unavailable;\n        case 502: // Bad Gateway\n            return Code.Unavailable;\n        case 503: // Service Unavailable\n            return Code.Unavailable;\n        case 504: // Gateway Timeout\n            return Code.Unavailable;\n        default:\n            return Code.Unknown;\n    }\n}\n/**\n * codeFromString parses the string representation of a Code in snake_case.\n * For example, the string \"permission_denied\" parses into Code.PermissionDenied.\n *\n * If the given string cannot be parsed, the function returns undefined.\n */\nexport function codeFromString(value) {\n    if (!stringToCode) {\n        stringToCode = {};\n        for (const value of Object.values(Code)) {\n            if (typeof value == \"string\") {\n                continue;\n            }\n            stringToCode[codeToString(value)] = value;\n        }\n    }\n    return stringToCode[value];\n}\n/**\n * codeToString returns the string representation of a Code.\n */\nexport function codeToString(value) {\n    const name = Code[value];\n    if (typeof name != \"string\") {\n        return value.toString();\n    }\n    return (name[0].toLowerCase() +\n        name.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c.toLowerCase()));\n}\nlet stringToCode;\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nexport const protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        // if (es % 3 !== 0)\n        // throw new Error(\"invalid base64 string\");\n        if (base64Str[base64Str.length - 2] == \"=\")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\")\n            es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n        groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"=\":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"\\n\":\n                    case \"\\r\":\n                    case \"\\t\":\n                    case \" \":\n                        continue; // skip white-space, and padding\n                    default:\n                        throw Error(\"invalid base64 string.\");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    enc(bytes) {\n        let base64 = \"\", groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // padding required?\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n        return base64;\n    },\n};\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nexport function assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38, FLOAT32_MIN = -3.4028234663852886e38, UINT32_MAX = 0xffffffff, INT32_MAX = 0x7fffffff, INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nexport function assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nexport function assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nexport function assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./assert.js\";\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nexport function getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    assert(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nexport function setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n        no: v.no,\n        name: v.name,\n        localName: enumObject[v.no],\n    })), opt);\n}\n/**\n * Create a new EnumType with the given values.\n */\nexport function makeEnumType(typeName, values, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName(name) {\n            return names[name];\n        },\n        findNumber(no) {\n            return numbers[no];\n        },\n    };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nexport function makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nfunction normalizeEnumValue(value) {\n    if (\"localName\" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nexport class Message {\n    /**\n     * Compare with a message of the same type.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        // return this.getType().runtime.util.clone(this);\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString, options) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument -- assigning to JsonValue is safe here\n        return this.fromJson(JSON.parse(jsonString), options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nexport var ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n","// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nexport function varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nexport function varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nexport function uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nexport function varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nexport function varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { assert } from \"./private/assert.js\";\nimport { int64FromString, int64ToString, uInt64ToString, } from \"./google/varint.js\";\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = globalThis.BigInt !== undefined &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    const assertInt64String = (value) => assert(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => assert(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return int64FromString(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return int64FromString(value);\n        },\n        dec(lo, hi) {\n            return int64ToString(lo, hi);\n        },\n        uDec(lo, hi) {\n            return uInt64ToString(lo, hi);\n        },\n    };\n}\nexport const protoInt64 = makeInt64Support();\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { varint32read, varint32write, varint64read, varint64write, } from \"./google/varint.js\";\nimport { assertFloat32, assertInt32, assertUInt32 } from \"./private/assert.js\";\nimport { protoInt64 } from \"./proto-int64.js\";\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nexport var WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * Used for groups\n     * @deprecated\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nexport class BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        varint32write(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = protoInt64.enc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        varint64write(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = protoInt64.uEnc(value);\n        varint64write(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexport class BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element on the wire and return the skipped data.\n     * Supports WireType.StartGroup since v2.0.0-alpha.23.\n     */\n    skip(wireType) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                // From descriptor.proto: Group type is deprecated, not supported in proto3.\n                // But we must still be able to parse and treat as unknown.\n                let t;\n                while ((t = this.tag()[1]) !== WireType.EndGroup) {\n                    this.skip(t);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from \"../field.js\";\n/**\n * Wrap field values whose message type has a wrapper.\n */\nexport function wrapField(type, value) {\n    if (value instanceof type) {\n        return value;\n    }\n    if (type.fieldWrapper) {\n        return type.fieldWrapper.wrapField(value);\n    }\n    throw new Error(`cannot unwrap field value, ${type.typeName} does not define a field wrapper`);\n}\n/**\n * Unwrap field values whose message type has a wrapper.\n */\nexport function unwrapField(type, value) {\n    return type.fieldWrapper ? type.fieldWrapper.unwrapField(value) : value;\n}\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the base type it wraps.\n */\nexport function getUnwrappedFieldType(field) {\n    if (field.kind !== \"message_field\") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nconst wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": ScalarType.BOOL,\n    \"google.protobuf.StringValue\": ScalarType.STRING,\n    \"google.protobuf.BytesValue\": ScalarType.BYTES,\n};\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from \"../field.js\";\nimport { WireType } from \"../binary-encoding.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Returns true if both scalar values are equal.\n */\nexport function scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the default value for the given scalar type, following\n * proto3 semantics.\n */\nexport function scalarDefaultValue(type) {\n    switch (type) {\n        case ScalarType.BOOL:\n            return false;\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            return protoInt64.zero;\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            return 0.0;\n        case ScalarType.BYTES:\n            return new Uint8Array(0);\n        case ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\nexport function scalarTypeInfo(type, value) {\n    const isUndefined = value === undefined;\n    let wireType = WireType.Varint;\n    let isIntrinsicDefault = value === 0;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch (type) {\n        case ScalarType.STRING:\n            isIntrinsicDefault = isUndefined || !value.length;\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.BOOL:\n            isIntrinsicDefault = value === false;\n            break;\n        case ScalarType.DOUBLE:\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.FLOAT:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.INT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n        case ScalarType.UINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n        case ScalarType.FIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.BYTES:\n            isIntrinsicDefault = isUndefined || !value.byteLength;\n            wireType = WireType.LengthDelimited;\n            break;\n        case ScalarType.FIXED32:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.SFIXED32:\n            wireType = WireType.Bit32;\n            break;\n        case ScalarType.SFIXED64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            wireType = WireType.Bit64;\n            break;\n        case ScalarType.SINT64:\n            isIntrinsicDefault = isUndefined || value == 0;\n            break;\n    }\n    const method = ScalarType[type].toLowerCase();\n    return [wireType, method, isUndefined || isIntrinsicDefault];\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { BinaryReader, BinaryWriter, WireType, } from \"../binary-encoding.js\";\nimport { ScalarType } from \"../field.js\";\nimport { unwrapField, wrapField } from \"./field-wrapper.js\";\nimport { scalarDefaultValue, scalarTypeInfo } from \"./scalars.js\";\nimport { assert } from \"./assert.js\";\n/* eslint-disable @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unnecessary-condition, no-case-declarations, prefer-const */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes) => new BinaryReader(bytes),\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: () => new BinaryWriter(),\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nexport function makeBinaryFormatCommon() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        },\n        writeUnknownFields(message, writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no, f.wireType).raw(f.data);\n                }\n            }\n        },\n        onUnknownField(message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no, wireType, data });\n        },\n        readMessage(message, reader, length, options) {\n            const type = message.getType();\n            const end = length === undefined ? reader.len : reader.pos + length;\n            while (reader.pos < end) {\n                const [fieldNo, wireType] = reader.tag(), field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message, fieldNo, wireType, data);\n                    }\n                    continue;\n                }\n                let target = message, repeated = field.repeated, localName = field.localName;\n                if (field.oneof) {\n                    target = target[field.oneof.localName];\n                    if (target.case != localName) {\n                        delete target.value;\n                    }\n                    target.case = localName;\n                    localName = \"value\";\n                }\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        const scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                            if (wireType == WireType.LengthDelimited &&\n                                scalarType != ScalarType.STRING &&\n                                scalarType != ScalarType.BYTES) {\n                                let e = reader.uint32() + reader.pos;\n                                while (reader.pos < e) {\n                                    arr.push(readScalar(reader, scalarType));\n                                }\n                            }\n                            else {\n                                arr.push(readScalar(reader, scalarType));\n                            }\n                        }\n                        else {\n                            target[localName] = readScalar(reader, scalarType);\n                        }\n                        break;\n                    case \"message\":\n                        const messageType = field.T;\n                        if (repeated) {\n                            // safe to assume presence of array, oneof cannot contain repeated values\n                            target[localName].push(messageType.fromBinary(reader.bytes(), options));\n                        }\n                        else {\n                            if (target[localName] instanceof messageType) {\n                                target[localName].fromBinary(reader.bytes(), options);\n                            }\n                            else {\n                                target[localName] = unwrapField(messageType, messageType.fromBinary(reader.bytes(), options));\n                            }\n                        }\n                        break;\n                    case \"map\":\n                        let [mapKey, mapVal] = readMapEntry(field, reader, options);\n                        // safe to assume presence of map object, oneof cannot contain repeated values\n                        target[localName][mapKey] = mapVal;\n                        break;\n                }\n            }\n        },\n    };\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while (reader.pos < end) {\n        let [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = field.V.T.fromBinary(reader.bytes(), options);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        let keyRaw = scalarDefaultValue(field.K);\n        key =\n            field.K == ScalarType.BOOL\n                ? keyRaw.toString()\n                : keyRaw;\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case \"scalar\":\n                val = scalarDefaultValue(field.V.T);\n                break;\n            case \"enum\":\n                val = 0;\n                break;\n            case \"message\":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key, val];\n}\nfunction readScalar(reader, type) {\n    let [, method] = scalarTypeInfo(type);\n    return reader[method]();\n}\nexport function writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case ScalarType.BOOL:\n            assert(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.K, 1, keyValue, true);\n    // write value, expecting value field number = 2\n    switch (field.V.kind) {\n        case \"scalar\":\n            writeScalar(writer, field.V.T, 2, value, true);\n            break;\n        case \"enum\":\n            writeScalar(writer, ScalarType.INT32, 2, value, true);\n            break;\n        case \"message\":\n            writeMessageField(writer, options, field.V.T, 2, value);\n            break;\n    }\n    writer.join();\n}\nexport function writeMessageField(writer, options, type, fieldNo, value) {\n    if (value !== undefined) {\n        const message = wrapField(type, value);\n        writer\n            .tag(fieldNo, WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n    }\n}\nexport function writeScalar(writer, type, fieldNo, value, emitIntrinsicDefault) {\n    let [wireType, method, isIntrinsicDefault] = scalarTypeInfo(type, value);\n    if (!isIntrinsicDefault || emitIntrinsicDefault) {\n        writer.tag(fieldNo, wireType)[method](value);\n    }\n}\nexport function writePacked(writer, type, fieldNo, value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo, WireType.LengthDelimited).fork();\n    let [, method] = scalarTypeInfo(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { unwrapField, wrapField } from \"./field-wrapper.js\";\nimport { ScalarType } from \"../field.js\";\nimport { assert, assertFloat32, assertInt32, assertUInt32 } from \"./assert.js\";\nimport { protoInt64 } from \"../proto-int64.js\";\nimport { protoBase64 } from \"../proto-base64.js\";\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nexport function makeJsonFormatCommon(makeWriteField) {\n    const writeField = makeWriteField(writeEnum, writeScalar);\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        readMessage(type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${this.debug(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = {};\n            for (const [jsonKey, jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (!field) {\n                    if (!options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    }\n                    continue;\n                }\n                let localName = field.localName;\n                let target = message;\n                if (field.oneof) {\n                    if (jsonValue === null && field.kind == \"scalar\") {\n                        // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                        continue;\n                    }\n                    const seen = oneofSeen[field.oneof.localName];\n                    if (seen) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                    }\n                    oneofSeen[field.oneof.localName] = jsonKey;\n                    target = target[field.oneof.localName] = { case: localName };\n                    localName = \"value\";\n                }\n                if (field.repeated) {\n                    if (jsonValue === null) {\n                        continue;\n                    }\n                    if (!Array.isArray(jsonValue)) {\n                        throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    }\n                    const targetArray = target[localName];\n                    for (const jsonItem of jsonValue) {\n                        if (jsonItem === null) {\n                            throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`);\n                        }\n                        let val;\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- \"map\" is invalid for repeated fields\n                        switch (field.kind) {\n                            case \"message\":\n                                val = field.T.fromJson(jsonItem, options);\n                                break;\n                            case \"enum\":\n                                val = readEnum(field.T, jsonItem, options.ignoreUnknownFields);\n                                if (val === undefined)\n                                    continue;\n                                break;\n                            case \"scalar\":\n                                try {\n                                    val = readScalar(field.T, jsonItem);\n                                }\n                                catch (e) {\n                                    let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonItem)}`;\n                                    if (e instanceof Error && e.message.length > 0) {\n                                        m += `: ${e.message}`;\n                                    }\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        targetArray.push(val);\n                    }\n                }\n                else if (field.kind == \"map\") {\n                    if (jsonValue === null) {\n                        continue;\n                    }\n                    if (Array.isArray(jsonValue) || typeof jsonValue != \"object\") {\n                        throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`);\n                    }\n                    const targetMap = target[localName];\n                    for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n                        if (jsonMapValue === null) {\n                            throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: map value null`);\n                        }\n                        let val;\n                        switch (field.V.kind) {\n                            case \"message\":\n                                val = field.V.T.fromJson(jsonMapValue, options);\n                                break;\n                            case \"enum\":\n                                val = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields);\n                                if (val === undefined)\n                                    continue;\n                                break;\n                            case \"scalar\":\n                                try {\n                                    val = readScalar(field.V.T, jsonMapValue);\n                                }\n                                catch (e) {\n                                    let m = `cannot decode map value for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                    if (e instanceof Error && e.message.length > 0) {\n                                        m += `: ${e.message}`;\n                                    }\n                                    throw new Error(m);\n                                }\n                                break;\n                        }\n                        try {\n                            targetMap[readScalar(field.K, field.K == ScalarType.BOOL\n                                ? jsonMapKey == \"true\"\n                                    ? true\n                                    : jsonMapKey == \"false\"\n                                        ? false\n                                        : jsonMapKey\n                                : jsonMapKey).toString()] = val;\n                        }\n                        catch (e) {\n                            let m = `cannot decode map key for field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                            if (e instanceof Error && e.message.length > 0) {\n                                m += `: ${e.message}`;\n                            }\n                            throw new Error(m);\n                        }\n                    }\n                }\n                else {\n                    switch (field.kind) {\n                        case \"message\":\n                            const messageType = field.T;\n                            if (jsonValue === null &&\n                                messageType.typeName != \"google.protobuf.Value\") {\n                                if (field.oneof) {\n                                    throw new Error(`cannot decode field ${type.typeName}.${field.name} from JSON: null is invalid for oneof field \"${jsonKey}\"`);\n                                }\n                                continue;\n                            }\n                            const targetMessage = target[localName] === undefined\n                                ? new messageType()\n                                : wrapField(messageType, target[localName]);\n                            target[localName] = unwrapField(messageType, targetMessage.fromJson(jsonValue, options));\n                            break;\n                        case \"enum\":\n                            const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields);\n                            if (enumValue !== undefined) {\n                                target[localName] = enumValue;\n                            }\n                            break;\n                        case \"scalar\":\n                            try {\n                                target[localName] = readScalar(field.T, jsonValue);\n                            }\n                            catch (e) {\n                                let m = `cannot decode field ${type.typeName}.${field.name} from JSON: ${this.debug(jsonValue)}`;\n                                if (e instanceof Error && e.message.length > 0) {\n                                    m += `: ${e.message}`;\n                                }\n                                throw new Error(m);\n                            }\n                            break;\n                    }\n                }\n            }\n            return message;\n        },\n        writeMessage(message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (const member of type.fields.byMember()) {\n                    let jsonValue;\n                    if (member.kind == \"oneof\") {\n                        const oneof = message[member.localName];\n                        if (oneof.value === undefined) {\n                            continue;\n                        }\n                        field = member.findField(oneof.case);\n                        if (!field) {\n                            throw \"oneof case not found: \" + oneof.case;\n                        }\n                        jsonValue = writeField(field, oneof.value, options);\n                    }\n                    else {\n                        field = member;\n                        jsonValue = writeField(field, message[field.localName], options);\n                    }\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar,\n        writeScalar,\n        debug: debugJsonValue,\n    };\n}\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return \"null\";\n    }\n    switch (typeof json) {\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return json.toString();\n    }\n}\n// May throw an error. If the error message is non-blank, it should be shown.\n// It is up to the caller to provide context.\nfunction readScalar(type, json) {\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.DOUBLE:\n        case ScalarType.FLOAT:\n            if (json === null)\n                return 0.0;\n            if (json === \"NaN\")\n                return Number.NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (json === \"\") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == \"string\" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != \"string\" && typeof json != \"number\") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above, so this is an error\n                break;\n            }\n            if (type == ScalarType.FLOAT)\n                assertFloat32(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.FIXED32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.UINT32:\n            if (json === null)\n                return 0;\n            let int32;\n            if (typeof json == \"number\")\n                int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == ScalarType.UINT32)\n                assertUInt32(int32);\n            else\n                assertInt32(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            if (json === null)\n                return protoInt64.zero;\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            return protoInt64.parse(json);\n        case ScalarType.FIXED64:\n        case ScalarType.UINT64:\n            if (json === null)\n                return protoInt64.zero;\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            return protoInt64.uParse(json);\n        // bool:\n        case ScalarType.BOOL:\n            if (json === null)\n                return false;\n            if (typeof json !== \"boolean\")\n                break;\n            return json;\n        // string:\n        case ScalarType.STRING:\n            if (json === null)\n                return \"\";\n            if (typeof json !== \"string\") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            if (json === null || json === \"\")\n                return new Uint8Array(0);\n            if (typeof json !== \"string\")\n                break;\n            return protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields) {\n    if (json === null) {\n        // proto3 requires 0 to be default value for all enums\n        return 0;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            if (value || ignoreUnknownFields) {\n                return value === null || value === void 0 ? void 0 : value.no;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\nfunction writeEnum(type, value, emitIntrinsicDefault, enumAsInteger) {\n    var _a;\n    if (value === undefined) {\n        return value;\n    }\n    if (value === 0 && !emitIntrinsicDefault) {\n        // proto3 requires 0 to be default value for all enums\n        return undefined;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    if (type.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar(type, value, emitIntrinsicDefault) {\n    if (value === undefined) {\n        return undefined;\n    }\n    switch (type) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case ScalarType.INT32:\n        case ScalarType.SFIXED32:\n        case ScalarType.SINT32:\n        case ScalarType.FIXED32:\n        case ScalarType.UINT32:\n            assert(typeof value == \"number\");\n            return value != 0 || emitIntrinsicDefault ? value : undefined;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case ScalarType.FLOAT:\n        // assertFloat32(value);\n        case ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            assert(typeof value == \"number\");\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value !== 0 || emitIntrinsicDefault ? value : undefined;\n        // string:\n        case ScalarType.STRING:\n            assert(typeof value == \"string\");\n            return value.length > 0 || emitIntrinsicDefault ? value : undefined;\n        // bool:\n        case ScalarType.BOOL:\n            assert(typeof value == \"boolean\");\n            return value || emitIntrinsicDefault ? value : undefined;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case ScalarType.UINT64:\n        case ScalarType.FIXED64:\n        case ScalarType.INT64:\n        case ScalarType.SFIXED64:\n        case ScalarType.SINT64:\n            assert(typeof value == \"bigint\" ||\n                typeof value == \"string\" ||\n                typeof value == \"number\");\n            // We use implicit conversion with `value != 0` to catch both 0n and \"0\"\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return emitIntrinsicDefault || value != 0\n                ? value.toString(10)\n                : undefined;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case ScalarType.BYTES:\n            assert(value instanceof Uint8Array);\n            return emitIntrinsicDefault || value.byteLength > 0\n                ? protoBase64.enc(value)\n                : undefined;\n    }\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { setEnumType } from \"./enum.js\";\nimport { ScalarType } from \"../field.js\";\nimport { scalarEquals } from \"./scalars.js\";\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nexport function makeUtilCommon() {\n    return {\n        setEnumType,\n        initPartial(source, target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] === undefined) {\n                    continue;\n                }\n                switch (member.kind) {\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == \"message\" &&\n                            !(val instanceof sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        t[localName] = { case: sk, value: val };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        t[localName] = s[localName];\n                        break;\n                    case \"map\":\n                        switch (member.V.kind) {\n                            case \"scalar\":\n                            case \"enum\":\n                                Object.assign(t[localName], s[localName]);\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages, we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => val instanceof mt ? val : new mt(val));\n                        }\n                        else if (s[localName] !== undefined) {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                t[localName] = val;\n                            }\n                            else {\n                                t[localName] = val instanceof mt ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        },\n        equals(type, a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch (m.kind) {\n                        case \"message\":\n                            return va.every((a, i) => m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i) => scalarEquals(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i) => scalarEquals(ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case \"message\":\n                        return m.T.equals(va, vb);\n                    case \"enum\":\n                        return scalarEquals(ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return scalarEquals(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const k = va.case, s = m.findField(k);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch (s.kind) {\n                            case \"message\":\n                                return s.T.equals(va[k], vb[k]);\n                            case \"enum\":\n                                return scalarEquals(ScalarType.INT32, va, vb);\n                            case \"scalar\":\n                                return scalarEquals(s.T, va, vb);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va);\n                        if (keys.some((k) => vb[k] === undefined)) {\n                            return false;\n                        }\n                        switch (m.V.kind) {\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k) => scalarEquals(ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => scalarEquals(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        clone(message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map((e) => cloneSingularField(member, e));\n                }\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(member.V, v);\n                    }\n                }\n                else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case, value: cloneSingularField(f, source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(member, source);\n                }\n                any[member.localName] = copy;\n            }\n            return target;\n        },\n    };\n}\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(field, value) {\n    if (value === undefined) {\n        return value;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- unmatched \"map\" is unsupported\n    switch (field.kind) {\n        case \"enum\":\n            return value;\n        case \"scalar\":\n            if (field.T === ScalarType.BYTES) {\n                const c = new Uint8Array(value.byteLength);\n                c.set(value);\n                return c;\n            }\n            return value;\n        case \"message\":\n            if (field.T.fieldWrapper) {\n                return field.T.fieldWrapper.unwrapField(field.T.fieldWrapper.wrapField(value).clone());\n            }\n            return value.clone();\n    }\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nexport class InternalFieldList {\n    constructor(fields, normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a, b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\nexport function localName(desc) {\n    switch (desc.kind) {\n        case \"enum_field\":\n        case \"message_field\":\n        case \"map_field\":\n        case \"scalar_field\":\n            return localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n            if (reservedIdent[name]) {\n                return name + \"$\";\n            }\n            return name;\n        }\n        case \"enum_value\": {\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix === undefined) {\n                return desc.name;\n            }\n            const name = desc.name.substring(sharedPrefix.length);\n            if (reservedObjectProperties[name]) {\n                return name + \"$\";\n            }\n            return name;\n        }\n        case \"rpc\": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            if (reservedObjectProperties[name]) {\n                return name + \"$\";\n            }\n            return name;\n        }\n    }\n}\n/**\n * Returns the name of a field in generated code.\n */\nexport function localFieldName(protoName, inOneof) {\n    let name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties, but values of the `case` property.\n        return name;\n    }\n    if (reservedObjectProperties[name] || reservedMessageProperties[name]) {\n        name = name + \"$\";\n    }\n    return name;\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nexport function localOneofName(protoName) {\n    return localFieldName(protoName, false);\n}\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nexport const fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nexport function findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n// Names that cannot be used for identifiers, such as class names,\n// but _can_ be used for object properties.\nconst reservedIdent = {\n    // ECMAScript 2015 keywords\n    break: true,\n    case: true,\n    catch: true,\n    class: true,\n    const: true,\n    continue: true,\n    debugger: true,\n    default: true,\n    delete: true,\n    do: true,\n    else: true,\n    export: true,\n    extends: true,\n    false: true,\n    finally: true,\n    for: true,\n    function: true,\n    if: true,\n    import: true,\n    in: true,\n    instanceof: true,\n    new: true,\n    null: true,\n    return: true,\n    super: true,\n    switch: true,\n    this: true,\n    throw: true,\n    true: true,\n    try: true,\n    typeof: true,\n    var: true,\n    void: true,\n    while: true,\n    with: true,\n    yield: true,\n    // ECMAScript 2015 future reserved keywords\n    enum: true,\n    implements: true,\n    interface: true,\n    let: true,\n    package: true,\n    private: true,\n    protected: true,\n    public: true,\n    static: true,\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    Object: true,\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    bigint: true,\n    number: true,\n    boolean: true,\n    string: true,\n    object: true,\n    // Identifiers reserved for the runtime, so we can generate legible code\n    globalThis: true,\n    Uint8Array: true,\n    Partial: true,\n};\n// Names that cannot be used for object properties because they are reserved\n// by built-in JavaScript properties.\nconst reservedObjectProperties = {\n    // names reserved by JavaScript\n    constructor: true,\n    toString: true,\n    toJSON: true,\n    valueOf: true,\n};\n// Names that cannot be used for object properties because they are reserved\n// by the runtime.\nconst reservedMessageProperties = {\n    // names reserved by the runtime\n    getType: true,\n    clone: true,\n    equals: true,\n    fromBinary: true,\n    fromJson: true,\n    fromJsonString: true,\n    toBinary: true,\n    toJson: true,\n    toJsonString: true,\n    // names reserved by the runtime for the future\n    toObject: true,\n};\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { localOneofName } from \"./names.js\";\nimport { assert } from \"./assert.js\";\nexport class InternalOneofInfo {\n    constructor(name) {\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = localOneofName(name);\n    }\n    addField(field) {\n        assert(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { makeProtoRuntime } from \"./private/proto-runtime.js\";\nimport { makeBinaryFormatProto3 } from \"./private/binary-format-proto3.js\";\nimport { makeJsonFormatProto3 } from \"./private/json-format-proto3.js\";\nimport { makeUtilCommon } from \"./private/util-common.js\";\nimport { InternalFieldList } from \"./private/field-list.js\";\nimport { scalarDefaultValue } from \"./private/scalars.js\";\nimport { ScalarType } from \"./field.js\";\nimport { InternalOneofInfo } from \"./private/field.js\";\nimport { localFieldName, fieldJsonName } from \"./private/names.js\";\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nexport const proto3 = makeProtoRuntime(\"proto3\", makeJsonFormatProto3(), makeBinaryFormatProto3(), Object.assign(Object.assign({}, makeUtilCommon()), { newFieldList(fields) {\n        return new InternalFieldList(fields, normalizeFieldInfosProto3);\n    },\n    initFields(target) {\n        for (const member of target.getType().fields.byMember()) {\n            if (member.opt) {\n                continue;\n            }\n            const name = member.localName, t = target;\n            if (member.repeated) {\n                t[name] = [];\n                continue;\n            }\n            switch (member.kind) {\n                case \"oneof\":\n                    t[name] = { case: undefined };\n                    break;\n                case \"enum\":\n                    t[name] = 0;\n                    break;\n                case \"map\":\n                    t[name] = {};\n                    break;\n                case \"scalar\":\n                    t[name] = scalarDefaultValue(member.T); // eslint-disable-line @typescript-eslint/no-unsafe-assignment\n                    break;\n                case \"message\":\n                    // message fields are always optional in proto3\n                    break;\n            }\n        }\n    } }));\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\nfunction normalizeFieldInfosProto3(fieldInfos) {\n    var _a, _b, _c;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = localFieldName(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        // From the proto3 language guide:\n        // > In proto3, repeated fields of scalar numeric types are packed by default.\n        // This information is incomplete - according to the conformance tests, BOOL\n        // and ENUM are packed by default as well. This means only STRING and BYTES\n        // are not packed by default, which makes sense because they are length-delimited.\n        f.packed =\n            (_c = field.packed) !== null && _c !== void 0 ? _c : (field.kind == \"enum\" ||\n                (field.kind == \"scalar\" &&\n                    field.T != ScalarType.BYTES &&\n                    field.T != ScalarType.STRING));\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { getEnumType, makeEnum, makeEnumType } from \"./enum.js\";\nimport { makeMessageType } from \"./message-type.js\";\nexport function makeProtoRuntime(syntax, json, bin, util) {\n    return {\n        syntax,\n        json,\n        bin,\n        util,\n        makeMessageType(typeName, fields, opt) {\n            return makeMessageType(this, typeName, fields, opt);\n        },\n        makeEnum,\n        makeEnumType,\n        getEnumType,\n    };\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { wrapField } from \"./field-wrapper.js\";\nimport { assert } from \"./assert.js\";\nimport { makeJsonFormatCommon } from \"./json-format-common.js\";\n/* eslint-disable no-case-declarations, @typescript-eslint/restrict-plus-operands,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument */\nexport function makeJsonFormatProto3() {\n    return makeJsonFormatCommon((writeEnum, writeScalar) => {\n        return function writeField(field, value, options) {\n            if (field.kind == \"map\") {\n                const jsonObj = {};\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            const val = writeScalar(field.V.T, entryValue, true);\n                            assert(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                    case \"message\":\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            // JSON standard allows only (double quoted) string as property key\n                            jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                        }\n                        break;\n                    case \"enum\":\n                        const enumType = field.V.T;\n                        for (const [entryKey, entryValue] of Object.entries(value)) {\n                            assert(entryValue === undefined || typeof entryValue == \"number\");\n                            const val = writeEnum(enumType, entryValue, true, options.enumAsInteger);\n                            assert(val !== undefined);\n                            jsonObj[entryKey.toString()] = val; // JSON standard allows only (double quoted) string as property key\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || Object.keys(jsonObj).length > 0\n                    ? jsonObj\n                    : undefined;\n            }\n            else if (field.repeated) {\n                const jsonArr = [];\n                switch (field.kind) {\n                    case \"scalar\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeScalar(field.T, value[i], true));\n                        }\n                        break;\n                    case \"enum\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(writeEnum(field.T, value[i], true, options.enumAsInteger));\n                        }\n                        break;\n                    case \"message\":\n                        for (let i = 0; i < value.length; i++) {\n                            jsonArr.push(wrapField(field.T, value[i]).toJson(options));\n                        }\n                        break;\n                }\n                return options.emitDefaultValues || jsonArr.length > 0\n                    ? jsonArr\n                    : undefined;\n            }\n            else {\n                switch (field.kind) {\n                    case \"scalar\":\n                        return writeScalar(field.T, value, !!field.oneof || field.opt || options.emitDefaultValues);\n                    case \"enum\":\n                        return writeEnum(field.T, value, !!field.oneof || field.opt || options.emitDefaultValues, options.enumAsInteger);\n                    case \"message\":\n                        return value !== undefined\n                            ? wrapField(field.T, value).toJson(options)\n                            : undefined;\n                }\n            }\n        };\n    });\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ScalarType } from \"../field.js\";\nimport { makeBinaryFormatCommon, writeMapEntry, writeMessageField, writePacked, writeScalar, } from \"./binary-format-common.js\";\n/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unnecessary-condition, @typescript-eslint/strict-boolean-expressions, prefer-const, no-case-declarations */\nexport function makeBinaryFormatProto3() {\n    return Object.assign(Object.assign({}, makeBinaryFormatCommon()), { writeMessage(message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                let value, // this will be our field value, whether it is member of a oneof or regular field\n                repeated = field.repeated, localName = field.localName;\n                if (field.oneof) {\n                    const oneof = message[field.oneof.localName];\n                    if (oneof.case !== localName) {\n                        continue; // field is not selected, skip\n                    }\n                    value = oneof.value;\n                }\n                else {\n                    value = message[localName];\n                }\n                switch (field.kind) {\n                    case \"scalar\":\n                    case \"enum\":\n                        let scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n                        if (repeated) {\n                            if (field.packed) {\n                                writePacked(writer, scalarType, field.no, value);\n                            }\n                            else {\n                                for (const item of value) {\n                                    writeScalar(writer, scalarType, field.no, item, true);\n                                }\n                            }\n                        }\n                        else {\n                            if (value !== undefined) {\n                                writeScalar(writer, scalarType, field.no, value, !!field.oneof || field.opt);\n                            }\n                        }\n                        break;\n                    case \"message\":\n                        if (repeated) {\n                            for (const item of value) {\n                                writeMessageField(writer, options, field.T, field.no, item);\n                            }\n                        }\n                        else {\n                            writeMessageField(writer, options, field.T, field.no, value);\n                        }\n                        break;\n                    case \"map\":\n                        for (const [key, val] of Object.entries(value)) {\n                            writeMapEntry(writer, options, field, key, val);\n                        }\n                        break;\n                }\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        } });\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message, } from \"../message.js\";\n/**\n * Create a new message type using the given runtime.\n */\nexport function makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        },\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new Message());\n    Object.assign(type, {\n        runtime,\n        typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary(bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson(jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString(jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals(a, b) {\n            return runtime.util.equals(type, a, b);\n        },\n    });\n    return type;\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Code, codeFromString, codeToString } from \"./code.js\";\nimport { Any, createRegistry, proto3, protoBase64, } from \"@bufbuild/protobuf\";\n/**\n * ConnectError captures three pieces of information: a Code, an error\n * message, and an optional collection of arbitrary Protobuf messages called\n * \"details\".\n *\n * Because developer tools typically show just the error message, we prefix\n * it with the status code, so that the most important information is always\n * visible immediately.\n *\n * Error details are wrapped with google.protobuf.Any on the wire, so that\n * a server or middleware can attach arbitrary data to an error. Use the\n * function connectErrorDetails() to retrieve the details.\n */\nexport class ConnectError extends Error {\n    constructor(message, code = Code.Unknown, details, metadata) {\n        super(createMessage(message, code));\n        this.name = \"ConnectError\";\n        // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#example\n        Object.setPrototypeOf(this, new.target.prototype);\n        this.rawMessage = message;\n        this.code = code;\n        this.metadata = new Headers(metadata !== null && metadata !== void 0 ? metadata : {});\n        this.details = [];\n    }\n}\nexport function connectErrorDetails(error, typeOrRegistry, ...moreTypes) {\n    const typeRegistry = \"typeName\" in typeOrRegistry\n        ? createRegistry(typeOrRegistry, ...moreTypes)\n        : typeOrRegistry;\n    const details = [];\n    for (const data of error.details) {\n        try {\n            const any = new Any(data);\n            const name = any.typeUrl.substring(any.typeUrl.lastIndexOf(\"/\") + 1);\n            const type = typeRegistry.findMessage(name);\n            if (type) {\n                const message = new type();\n                if (any.unpackTo(message)) {\n                    details.push(message);\n                }\n            }\n        }\n        catch (_) {\n            //\n        }\n    }\n    return details;\n}\n/**\n * Create an error message, prefixing the given code.\n */\nfunction createMessage(message, code) {\n    return message.length\n        ? `[${codeToString(code)}] ${message}`\n        : `[${codeToString(code)}]`;\n}\n/**\n * Parse a Connect error from a JSON value.\n * Will return a ConnectError, but throw one in case the JSON is malformed.\n */\nexport function connectErrorFromJson(jsonValue, metadata) {\n    if (typeof jsonValue !== \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue) ||\n        !(\"code\" in jsonValue) ||\n        typeof jsonValue.code !== \"string\") {\n        throw newParseError(jsonValue);\n    }\n    const code = codeFromString(jsonValue.code);\n    if (!code) {\n        throw newParseError(jsonValue.code, \".code\");\n    }\n    const message = jsonValue.message;\n    if (message != null && typeof message !== \"string\") {\n        throw newParseError(jsonValue.code, \".message\");\n    }\n    const error = new ConnectError(message !== null && message !== void 0 ? message : \"\", code, undefined, metadata);\n    if (\"details\" in jsonValue && Array.isArray(jsonValue.details)) {\n        for (const detail of jsonValue.details) {\n            if (detail === null ||\n                typeof detail != \"object\" ||\n                Array.isArray(detail) ||\n                typeof detail.type != \"string\" ||\n                typeof detail.value != \"string\") {\n                throw newParseError(detail, `.details`);\n            }\n            try {\n                error.details.push({\n                    typeUrl: \"type.googleapis.com/\" + detail.type,\n                    value: protoBase64.dec(detail.value),\n                });\n            }\n            catch (e) {\n                throw newParseError(e, `.details`, false);\n            }\n        }\n    }\n    return error;\n}\n/**\n * Convert any value - typically a caught error into a ConnectError,\n * following these rules:\n * - If the value is already a ConnectError, return it as is.\n * - If the value is an AbortError from the fetch API, return the message\n *   of the AbortError with code Canceled.\n * - For other Errors, return the Errors message with code Unknown by default.\n * - For other values, return the values String representation as a message,\n *   with the code Unknown by default.\n */\nexport function connectErrorFromReason(reason, code = Code.Unknown) {\n    if (reason instanceof ConnectError) {\n        return reason;\n    }\n    if (reason instanceof Error) {\n        if (reason.name == \"AbortError\") {\n            // Fetch requests can only be canceled with an AbortController.\n            // We detect that condition by looking at the name of the raised\n            // error object, and translate to the appropriate status code.\n            return new ConnectError(reason.message, Code.Canceled);\n        }\n        return new ConnectError(reason.message);\n    }\n    return new ConnectError(String(reason), code);\n}\nexport function newParseError(valueOrError, property, json) {\n    let d;\n    if (json !== null && json !== void 0 ? json : true) {\n        d = proto3.json.debug(valueOrError);\n    }\n    else {\n        property = \"\";\n        d =\n            valueOrError instanceof Error\n                ? valueOrError.message\n                : String(valueOrError);\n    }\n    return new ConnectError(`cannot decode ConnectError${property !== null && property !== void 0 ? property : \"\"} from JSON: ${d}`, Code.Internal);\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * applyInterceptors takes the given UnaryFn or ServerStreamingFn, and wraps\n * it with each of the given interceptors, returning a new UnaryFn or\n * ServerStreamingFn.\n */\nfunction applyInterceptors(next, interceptors) {\n    return interceptors\n        .concat()\n        .reverse()\n        .reduce((n, i) => i(n), next);\n}\n/**\n * Runs a unary method with the given interceptors. Note that this function\n * is only used when implementing a Transport.\n */\nexport function runUnary(req, next, interceptors) {\n    if (interceptors) {\n        next = applyInterceptors(next, interceptors);\n    }\n    return next(req);\n}\n/**\n * Runs a server-streaming method with the given interceptors. Note that this\n * function is only used when implementing a Transport.\n */\nexport function runServerStream(req, next, interceptors) {\n    if (interceptors) {\n        next = applyInterceptors(next, interceptors);\n    }\n    return next(req);\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { ConnectError } from \"./connect-error.js\";\nimport { Code } from \"./code.js\";\n/**\n * Create a ReadableStream of enveloped messages from a ReadableStream of bytes.\n *\n * Ideally, this would simply be a TransformStream, but ReadableStream.pipeThrough\n * does not have the necessary availability at this time.\n */\nexport function createEnvelopeReadableStream(stream) {\n    let reader;\n    let buffer = new Uint8Array(0);\n    function append(chunk) {\n        const n = new Uint8Array(buffer.length + chunk.length);\n        n.set(buffer);\n        n.set(chunk, buffer.length);\n        buffer = n;\n    }\n    return new ReadableStream({\n        start() {\n            reader = stream.getReader();\n        },\n        async pull(controller) {\n            let header = undefined;\n            for (;;) {\n                if (header === undefined && buffer.byteLength >= 5) {\n                    let length = 0;\n                    for (let i = 1; i < 5; i++) {\n                        length = (length << 8) + buffer[i];\n                    }\n                    header = { flags: buffer[0], length };\n                }\n                if (header !== undefined && buffer.byteLength >= header.length + 5) {\n                    break;\n                }\n                const result = await reader.read();\n                if (result.done) {\n                    break;\n                }\n                append(result.value);\n            }\n            if (header === undefined) {\n                if (buffer.byteLength == 0) {\n                    controller.close();\n                    return;\n                }\n                controller.error(new ConnectError(\"premature end of stream\", Code.DataLoss));\n                return;\n            }\n            const data = buffer.subarray(5, 5 + header.length);\n            buffer = buffer.subarray(5 + header.length);\n            controller.enqueue({\n                flags: header.flags,\n                data,\n            });\n        },\n    });\n}\nexport function encodeEnvelopes(...envelopes) {\n    const target = new ArrayBuffer(envelopes.reduce((previousValue, currentValue) => previousValue + currentValue.data.length + 5, 0));\n    let offset = 0;\n    for (const m of envelopes) {\n        offset += encodeEnvelope(m, target, offset);\n    }\n    return new Uint8Array(target);\n}\nfunction encodeEnvelope(envelope, target, byteOffset) {\n    const len = envelope.data.length + 5;\n    const bytes = new Uint8Array(target, byteOffset, len);\n    bytes[0] = envelope.flags; // first byte is flags\n    for (let l = envelope.data.length, i = 4; i > 0; i--) {\n        bytes[i] = l % 256; // 4 bytes message length\n        l >>>= 8;\n    }\n    bytes.set(envelope.data, 5);\n    return len;\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message, protoBase64 } from \"@bufbuild/protobuf\";\nimport { ConnectError } from \"./connect-error.js\";\nimport { Code } from \"./code.js\";\n/**\n * Encode a single binary header value according to the Connect\n * and gRPC specifications.\n *\n * This function accepts raw binary data from a buffer, a string\n * with UTF-8 text, or a protobuf message. It encodes the input\n * with base64 and returns a string that can be used for a header\n * whose name ends with `-bin`.\n */\nexport function encodeBinaryHeader(value) {\n    let bytes;\n    if (value instanceof Message) {\n        bytes = value.toBinary();\n    }\n    else if (typeof value == \"string\") {\n        bytes = new TextEncoder().encode(value);\n    }\n    else {\n        bytes = value instanceof Uint8Array ? value : new Uint8Array(value);\n    }\n    return protoBase64.enc(bytes);\n}\nexport function decodeBinaryHeader(value, type, options) {\n    try {\n        const bytes = protoBase64.dec(value);\n        if (type) {\n            return type.fromBinary(bytes, options);\n        }\n        return bytes;\n    }\n    catch (e) {\n        throw new ConnectError(e instanceof Error ? e.message : String(e), Code.DataLoss);\n    }\n}\n/**\n * Create a union of several Headers objects, by appending all fields from all\n * inputs to a single Headers object.\n */\nexport function mergeHeaders(...headers) {\n    const h = new Headers();\n    for (const e of headers) {\n        e.forEach((value, key) => {\n            h.append(key, value);\n        });\n    }\n    return h;\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { MethodKind, } from \"@bufbuild/protobuf\";\nimport { ConnectError, connectErrorFromJson, connectErrorFromReason, newParseError, } from \"./connect-error.js\";\nimport { codeFromConnectHttpStatus, Code } from \"./code.js\";\nimport { runServerStream, runUnary } from \"./interceptor.js\";\nimport { createEnvelopeReadableStream, encodeEnvelopes } from \"./envelope.js\";\nimport { mergeHeaders } from \"./http-headers.js\";\nimport { assertFetchApi } from \"./assert-fetch-api.js\";\n/**\n * Create a Transport for the Connect protocol, which makes unary and\n * server-streaming methods available to web browsers. It uses the fetch\n * API to make HTTP requests.\n */\nexport function createConnectTransport(options) {\n    var _a;\n    assertFetchApi();\n    const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : false;\n    return {\n        async unary(service, method, signal, timeoutMs, header, message) {\n            var _a;\n            try {\n                return await runUnary({\n                    stream: false,\n                    service,\n                    method,\n                    url: `${options.baseUrl.replace(/\\/$/, \"\")}/${service.typeName}/${method.name}`,\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: createConnectRequestHeaders(header, timeoutMs, method.kind, useBinaryFormat),\n                    message: message instanceof method.I ? message : new method.I(message),\n                    signal: signal !== null && signal !== void 0 ? signal : new AbortController().signal,\n                }, async (unaryRequest) => {\n                    var _a;\n                    const response = await fetch(unaryRequest.url, Object.assign(Object.assign({}, unaryRequest.init), { headers: unaryRequest.header, signal: unaryRequest.signal, body: createConnectRequestBody(unaryRequest.message, method.kind, useBinaryFormat, options.jsonOptions) }));\n                    const responseType = (_a = response.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n                    if (response.status != 200) {\n                        if (responseType == \"application/json\") {\n                            throw connectErrorFromJson((await response.json()), mergeHeaders(...demuxHeaderTrailers(response.headers)));\n                        }\n                        throw new ConnectError(`HTTP ${response.status} ${response.statusText}`, codeFromConnectHttpStatus(response.status));\n                    }\n                    expectContentType(responseType, false, useBinaryFormat);\n                    const [demuxedHeader, demuxedTrailer] = demuxHeaderTrailers(response.headers);\n                    return {\n                        stream: false,\n                        service,\n                        method,\n                        header: demuxedHeader,\n                        message: useBinaryFormat\n                            ? method.O.fromBinary(new Uint8Array(await response.arrayBuffer()), options.binaryOptions)\n                            : method.O.fromJson((await response.json()), options.jsonOptions),\n                        trailer: demuxedTrailer,\n                    };\n                }, options.interceptors);\n            }\n            catch (e) {\n                throw connectErrorFromReason(e, Code.Internal);\n            }\n        },\n        async serverStream(service, method, signal, timeoutMs, header, message) {\n            var _a;\n            try {\n                return await runServerStream({\n                    stream: false,\n                    service,\n                    method,\n                    url: `${options.baseUrl.replace(/\\/$/, \"\")}/${service.typeName}/${method.name}`,\n                    init: {\n                        method: \"POST\",\n                        credentials: (_a = options.credentials) !== null && _a !== void 0 ? _a : \"same-origin\",\n                        redirect: \"error\",\n                        mode: \"cors\",\n                    },\n                    header: createConnectRequestHeaders(header, timeoutMs, method.kind, useBinaryFormat),\n                    message: message instanceof method.I ? message : new method.I(message),\n                    signal: signal !== null && signal !== void 0 ? signal : new AbortController().signal,\n                }, async (unaryRequest) => {\n                    var _a;\n                    const response = await fetch(unaryRequest.url, Object.assign(Object.assign({}, unaryRequest.init), { headers: unaryRequest.header, signal: unaryRequest.signal, body: createConnectRequestBody(unaryRequest.message, method.kind, useBinaryFormat, options.jsonOptions) }));\n                    const responseType = (_a = response.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n                    if (response.status != 200) {\n                        if (responseType == \"application/json\") {\n                            throw connectErrorFromJson((await response.json()), mergeHeaders(...demuxHeaderTrailers(response.headers)));\n                        }\n                        throw new ConnectError(`HTTP ${response.status} ${response.statusText}`, codeFromConnectHttpStatus(response.status));\n                    }\n                    expectContentType(responseType, true, useBinaryFormat);\n                    if (response.body === null) {\n                        throw \"missing response body\";\n                    }\n                    const reader = createEnvelopeReadableStream(response.body).getReader();\n                    let endStreamReceived = false;\n                    return {\n                        stream: true,\n                        service,\n                        method,\n                        header: response.headers,\n                        trailer: new Headers(),\n                        async read() {\n                            const result = await reader.read();\n                            if (result.done) {\n                                if (!endStreamReceived) {\n                                    throw new ConnectError(\"missing EndStreamResponse\");\n                                }\n                                return {\n                                    done: true,\n                                    value: undefined,\n                                };\n                            }\n                            if ((result.value.flags & endStreamResponseFlag) ===\n                                endStreamResponseFlag) {\n                                endStreamReceived = true;\n                                const endStream = endStreamFromJson(result.value.data);\n                                endStream.metadata.forEach((value, key) => this.trailer.append(key, value));\n                                if (endStream.error) {\n                                    throw endStream.error;\n                                }\n                                return {\n                                    done: true,\n                                    value: undefined,\n                                };\n                            }\n                            return {\n                                done: false,\n                                value: useBinaryFormat\n                                    ? method.O.fromBinary(result.value.data, options.binaryOptions)\n                                    : method.O.fromJsonString(new TextDecoder().decode(result.value.data), options.jsonOptions),\n                            };\n                        },\n                    };\n                }, options.interceptors);\n            }\n            catch (e) {\n                throw connectErrorFromReason(e, Code.Internal);\n            }\n        },\n    };\n}\n/**\n * Creates a body for a Connect request. Supports only requests with a single\n * message because of browser API limitations, but applies the enveloping\n * required for server-streaming requests.\n */\nfunction createConnectRequestBody(message, methodKind, useBinaryFormat, jsonOptions) {\n    const encoded = useBinaryFormat\n        ? message.toBinary()\n        : message.toJsonString(jsonOptions);\n    if (methodKind == MethodKind.Unary) {\n        return encoded;\n    }\n    const data = typeof encoded == \"string\" ? new TextEncoder().encode(encoded) : encoded;\n    return encodeEnvelopes({\n        data,\n        flags: 0b00000000,\n    }, {\n        data: new Uint8Array(0),\n        flags: endStreamResponseFlag,\n    });\n}\n/**\n * Creates headers for a Connect request.\n */\nfunction createConnectRequestHeaders(headers, timeoutMs, methodKind, useBinaryFormat) {\n    const result = new Headers(headers !== null && headers !== void 0 ? headers : {});\n    let type = \"application/\";\n    if (methodKind != MethodKind.Unary) {\n        type += \"connect+\";\n    }\n    type += useBinaryFormat ? \"proto\" : \"json\";\n    result.set(\"Content-Type\", type);\n    if (timeoutMs !== undefined) {\n        result.set(\"Connect-Timeout-Ms\", `${timeoutMs}`);\n    }\n    return result;\n}\n/**\n * Asserts a valid Connect Content-Type response header. Raises a ConnectError\n * otherwise.\n */\nfunction expectContentType(contentType, stream, binaryFormat) {\n    const match = contentType === null || contentType === void 0 ? void 0 : contentType.match(/^application\\/(connect\\+)?(json|proto)$/);\n    const gotBinaryFormat = match && match[2] == \"proto\";\n    if (!match || stream !== !!match[1] || binaryFormat !== gotBinaryFormat) {\n        throw new ConnectError(`unexpected response content type ${String(contentType)}`, Code.Internal);\n    }\n}\n/**\n * In unary RPCs, Connect transports trailing metadata as response header\n * fields, prefixed with \"trailer-\".\n *\n * This function demuxes headers and trailers into two separate Headers\n * objects.\n */\nfunction demuxHeaderTrailers(header) {\n    const h = new Headers(), t = new Headers();\n    header.forEach((value, key) => {\n        if (key.toLowerCase().startsWith(\"trailer-\")) {\n            t.set(key.substring(8), value);\n        }\n        else {\n            h.set(key, value);\n        }\n    });\n    return [h, t];\n}\nconst endStreamResponseFlag = 0b00000010;\n/**\n * Parse an EndStreamResponse of the Connect protocol.\n */\nfunction endStreamFromJson(data) {\n    let jsonValue;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        jsonValue = JSON.parse(new TextDecoder().decode(data));\n    }\n    catch (e) {\n        throw newParseError(e, \"\", false);\n    }\n    if (typeof jsonValue != \"object\" ||\n        jsonValue == null ||\n        Array.isArray(jsonValue)) {\n        throw newParseError(jsonValue);\n    }\n    const metadata = new Headers();\n    if (\"metadata\" in jsonValue) {\n        if (typeof jsonValue.metadata != \"object\" ||\n            jsonValue.metadata == null ||\n            Array.isArray(jsonValue.metadata)) {\n            throw newParseError(jsonValue, \".metadata\");\n        }\n        for (const [key, values] of Object.entries(jsonValue.metadata)) {\n            if (!Array.isArray(values) ||\n                values.some((value) => typeof value != \"string\")) {\n                throw newParseError(values, `.metadata[\"${key}\"]`);\n            }\n            for (const value of values) {\n                metadata.append(key, value);\n            }\n        }\n    }\n    const error = \"error\" in jsonValue\n        ? connectErrorFromJson(jsonValue.error, metadata)\n        : undefined;\n    return { metadata, error };\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Asserts that the fetch API is available.\n */\nexport function assertFetchApi() {\n    try {\n        new Headers();\n    }\n    catch (_) {\n        throw new Error(\"connect-web requires the fetch API. Are you running on an old version of Node.js? Node.js is not supported in Connect for Web - please stay tuned for Connect for Node.\");\n    }\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { MethodKind } from \"@bufbuild/protobuf\";\nimport { makeAnyClient } from \"./any-client.js\";\n/**\n * Create a PromiseClient for the given service, invoking RPCs through the\n * given transport.\n */\nexport function createPromiseClient(service, transport) {\n    return makeAnyClient(service, (method) => {\n        switch (method.kind) {\n            case MethodKind.Unary:\n                return createUnaryFn(transport, service, method);\n            case MethodKind.ServerStreaming:\n                return createServerStreamingFn(transport, service, method);\n            default:\n                return null;\n        }\n    });\n}\nfunction createUnaryFn(transport, service, method) {\n    return async function (requestMessage, options) {\n        var _a, _b;\n        const response = await transport.unary(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, requestMessage);\n        (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n        (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n        return response.message;\n    };\n}\nfunction createServerStreamingFn(transport, service, method) {\n    return function (requestMessage, options) {\n        let streamResponse;\n        return {\n            [Symbol.asyncIterator]() {\n                return {\n                    async next() {\n                        var _a, _b;\n                        if (!streamResponse) {\n                            streamResponse = await transport.serverStream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, requestMessage);\n                            (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, streamResponse.header);\n                        }\n                        const result = await streamResponse.read();\n                        if (result.done) {\n                            (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, streamResponse.trailer);\n                            return {\n                                done: true,\n                                value: undefined,\n                            };\n                        }\n                        return {\n                            done: false,\n                            value: result.value,\n                        };\n                    },\n                };\n            },\n        };\n    };\n}\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Create any client for the given service.\n *\n * The given createMethod function is called for each method definition\n * of the service. The function it returns is added to the client object\n * as a method.\n */\nexport function makeAnyClient(service, createMethod) {\n    const client = {};\n    for (const [localName, methodInfo] of Object.entries(service.methods)) {\n        const method = createMethod(Object.assign(Object.assign({}, methodInfo), { localName,\n            service }));\n        if (method != null) {\n            client[localName] = method;\n        }\n    }\n    return client;\n}\n","import { createConnectTransport, createPromiseClient, } from '@bufbuild/connect-web';\nimport fetch from 'cross-fetch';\nfunction createHeaderInterceptor(headers) {\n    return (next) => async (req) => {\n        if (headers) {\n            for (const [key, value] of Object.entries(headers)) {\n                if (!req.header.has(key) && value) {\n                    req.header.set(key, value);\n                }\n            }\n        }\n        return await next(req);\n    };\n}\nexport const indexIDHeaderKey = 'Operand-Index-ID';\nexport function operandClient(service, apiKey, endpoint, extraHeaders, forceFetchTransport) {\n    const baseUrl = endpoint || 'https://engine.operand.ai';\n    const headers = Object.assign(Object.assign({}, extraHeaders), { Authorization: apiKey });\n    const transport = hasFetchApi() && !forceFetchTransport\n        ? createConnectTransport({\n            baseUrl: baseUrl,\n            interceptors: [createHeaderInterceptor(headers)],\n        })\n        : createNodeFetchTransport(baseUrl, headers);\n    return createPromiseClient(service, transport);\n}\nfunction hasFetchApi() {\n    try {\n        new Headers();\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction createRequestBody(message) {\n    return message.toJsonString();\n}\nfunction createNodeFetchTransport(baseUrl, headers) {\n    return {\n        async unary(service, method, _signal, _timeoutMs, _header, message) {\n            const endpoint = `${baseUrl}/${service.typeName}/${method.name}`;\n            const response = await fetch(endpoint, {\n                method: 'POST',\n                headers: Object.assign(Object.assign({}, headers), { 'Content-Type': 'application/json' }),\n                body: createRequestBody(message instanceof method.I ? message : new method.I(message)),\n            });\n            if (!response.ok) {\n                const body = await response.text();\n                const message = `Request failed with code ${response.status}, status ${response.statusText}: ${body}`;\n                console.warn(message);\n                return Promise.reject(new Error(message));\n            }\n            return {\n                message: method.O.fromJson((await response.json()), {\n                    ignoreUnknownFields: true,\n                }),\n            };\n        },\n        async serverStream(_service, _method, _signal, _timeoutMs, _header, _message) {\n            return Promise.reject(new Error('Not implemented'));\n        },\n    };\n}\nimport * as V3Connect_1 from './index/v1/index_connectweb.js';\nexport { V3Connect_1 as V3Connect };\nimport * as V3Types_1 from './index/v1/index_pb.js';\nexport { V3Types_1 as V3Types };\nexport * from './operand/v1/object_connectweb.js';\nexport * from './operand/v1/object_pb.js';\nexport * from './operand/v1/operand_connectweb.js';\nexport * from './operand/v1/operand_pb.js';\nexport * from './operand/v1/notification_connectweb.js';\nexport * from './operand/v1/notification_pb.js';\nexport * from './operand/v1/index_connectweb.js';\nexport * from './operand/v1/index_pb.js';\n","// Copyright 2021-2022 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Message } from \"../../message.js\";\nimport { protoInt64 } from \"../../proto-int64.js\";\nimport { proto3 } from \"../../proto3.js\";\n/**\n * A Timestamp represents a point in time independent of any time zone or local\n * calendar, encoded as a count of seconds and fractions of seconds at\n * nanosecond resolution. The count is relative to an epoch at UTC midnight on\n * January 1, 1970, in the proleptic Gregorian calendar which extends the\n * Gregorian calendar backwards to year one.\n *\n * All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n * second table is needed for interpretation, using a [24-hour linear\n * smear](https://developers.google.com/time/smear).\n *\n * The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n * restricting to that range, we ensure that we can convert to and from [RFC\n * 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n *\n * # Examples\n *\n * Example 1: Compute Timestamp from POSIX `time()`.\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(time(NULL));\n *     timestamp.set_nanos(0);\n *\n * Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n *\n *     struct timeval tv;\n *     gettimeofday(&tv, NULL);\n *\n *     Timestamp timestamp;\n *     timestamp.set_seconds(tv.tv_sec);\n *     timestamp.set_nanos(tv.tv_usec * 1000);\n *\n * Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n *\n *     FILETIME ft;\n *     GetSystemTimeAsFileTime(&ft);\n *     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n *\n *     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n *     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n *     Timestamp timestamp;\n *     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n *     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n *\n * Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n *\n *     long millis = System.currentTimeMillis();\n *\n *     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n *         .setNanos((int) ((millis % 1000) * 1000000)).build();\n *\n *\n * Example 5: Compute Timestamp from Java `Instant.now()`.\n *\n *     Instant now = Instant.now();\n *\n *     Timestamp timestamp =\n *         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n *             .setNanos(now.getNano()).build();\n *\n *\n * Example 6: Compute Timestamp from current time in Python.\n *\n *     timestamp = Timestamp()\n *     timestamp.GetCurrentTime()\n *\n * # JSON Mapping\n *\n * In JSON format, the Timestamp type is encoded as a string in the\n * [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n * format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n * where {year} is always expressed using four digits while {month}, {day},\n * {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n * seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n * are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n * is required. A proto3 JSON serializer should always use UTC (as indicated by\n * \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n * able to accept both UTC and other timezones (as indicated by an offset).\n *\n * For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n * 01:30 UTC on January 15, 2017.\n *\n * In JavaScript, one can convert a Date object to this format using the\n * standard\n * [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n * method. In Python, a standard `datetime.datetime` object can be converted\n * to this format using\n * [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n * the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n * the Joda Time's [`ISODateTimeFormat.dateTime()`](\n * http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D\n * ) to obtain a formatter capable of generating timestamps in this format.\n *\n *\n *\n * @generated from message google.protobuf.Timestamp\n */\nexport class Timestamp extends Message {\n    constructor(data) {\n        super();\n        /**\n         * Represents seconds of UTC time since Unix epoch\n         * 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n         * 9999-12-31T23:59:59Z inclusive.\n         *\n         * @generated from field: int64 seconds = 1;\n         */\n        this.seconds = protoInt64.zero;\n        /**\n         * Non-negative fractions of a second at nanosecond resolution. Negative\n         * second values with fractions must still have non-negative nanos values\n         * that count forward in time. Must be from 0 to 999,999,999\n         * inclusive.\n         *\n         * @generated from field: int32 nanos = 2;\n         */\n        this.nanos = 0;\n        proto3.util.initPartial(data, this);\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: ${proto3.json.debug(json)}`);\n        }\n        const matches = json.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);\n        if (!matches) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        const ms = Date.parse(matches[1] + \"-\" + matches[2] + \"-\" + matches[3] + \"T\" + matches[4] + \":\" + matches[5] + \":\" + matches[6] + (matches[8] ? matches[8] : \"Z\"));\n        if (Number.isNaN(ms)) {\n            throw new Error(`cannot decode google.protobuf.Timestamp from JSON: invalid RFC 3339 string`);\n        }\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot decode message google.protobuf.Timestamp from JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        this.seconds = protoInt64.parse(ms / 1000);\n        this.nanos = 0;\n        if (matches[7]) {\n            this.nanos = (parseInt(\"1\" + matches[7] + \"0\".repeat(9 - matches[7].length)) - 1000000000);\n        }\n        return this;\n    }\n    toJson(options) {\n        const ms = Number(this.seconds) * 1000;\n        if (ms < Date.parse(\"0001-01-01T00:00:00Z\") || ms > Date.parse(\"9999-12-31T23:59:59Z\")) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive`);\n        }\n        if (this.nanos < 0) {\n            throw new Error(`cannot encode google.protobuf.Timestamp to JSON: nanos must not be negative`);\n        }\n        let z = \"Z\";\n        if (this.nanos > 0) {\n            const nanosStr = (this.nanos + 1000000000).toString().substring(1);\n            if (nanosStr.substring(3) === \"000000\") {\n                z = \".\" + nanosStr.substring(0, 3) + \"Z\";\n            }\n            else if (nanosStr.substring(6) === \"000\") {\n                z = \".\" + nanosStr.substring(0, 6) + \"Z\";\n            }\n            else {\n                z = \".\" + nanosStr + \"Z\";\n            }\n        }\n        return new Date(ms).toISOString().replace(\".000Z\", z);\n    }\n    toDate() {\n        return new Date(Number(this.seconds) * 1000 + Math.ceil(this.nanos / 1000000));\n    }\n    static now() {\n        return Timestamp.fromDate(new Date());\n    }\n    static fromDate(date) {\n        const ms = date.getTime();\n        return new Timestamp({\n            seconds: protoInt64.parse(Math.floor(ms / 1000)),\n            nanos: (ms % 1000) * 1000000,\n        });\n    }\n    static fromBinary(bytes, options) {\n        return new Timestamp().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Timestamp().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Timestamp().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Timestamp, a, b);\n    }\n}\nTimestamp.runtime = proto3;\nTimestamp.typeName = \"google.protobuf.Timestamp\";\nTimestamp.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"seconds\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"nanos\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n","// @generated by protoc-gen-es v0.1.1 with parameter \"target=ts+js\"\n// @generated from file operand/v1/object.proto (package operand.v1, syntax proto3)\n/* eslint-disable */\n/* @ts-nocheck */\nimport { Message, proto3, protoInt64, Timestamp } from \"@bufbuild/protobuf\";\n/**\n * @generated from enum operand.v1.ObjectType\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * @generated from enum value: OBJECT_TYPE_UNSPECIFIED = 0;\n     */\n    ObjectType[ObjectType[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_COLLECTION = 1;\n     */\n    ObjectType[ObjectType[\"COLLECTION\"] = 1] = \"COLLECTION\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_TEXT = 2;\n     */\n    ObjectType[ObjectType[\"TEXT\"] = 2] = \"TEXT\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_HTML = 3;\n     */\n    ObjectType[ObjectType[\"HTML\"] = 3] = \"HTML\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_RSS = 4;\n     */\n    ObjectType[ObjectType[\"RSS\"] = 4] = \"RSS\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_AUDIO = 5;\n     */\n    ObjectType[ObjectType[\"AUDIO\"] = 5] = \"AUDIO\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_PODCAST = 6;\n     */\n    ObjectType[ObjectType[\"PODCAST\"] = 6] = \"PODCAST\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_SITEMAP = 7;\n     */\n    ObjectType[ObjectType[\"SITEMAP\"] = 7] = \"SITEMAP\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_PDF = 8;\n     */\n    ObjectType[ObjectType[\"PDF\"] = 8] = \"PDF\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_EPUB = 9;\n     */\n    ObjectType[ObjectType[\"EPUB\"] = 9] = \"EPUB\";\n    /**\n     * @generated from enum value: OBJECT_TYPE_YOUTUBE = 10;\n     */\n    ObjectType[ObjectType[\"YOUTUBE\"] = 10] = \"YOUTUBE\";\n})(ObjectType || (ObjectType = {}));\n// Retrieve enum metadata with: proto3.getEnumType(ObjectType)\nproto3.util.setEnumType(ObjectType, \"operand.v1.ObjectType\", [\n    { no: 0, name: \"OBJECT_TYPE_UNSPECIFIED\" },\n    { no: 1, name: \"OBJECT_TYPE_COLLECTION\" },\n    { no: 2, name: \"OBJECT_TYPE_TEXT\" },\n    { no: 3, name: \"OBJECT_TYPE_HTML\" },\n    { no: 4, name: \"OBJECT_TYPE_RSS\" },\n    { no: 5, name: \"OBJECT_TYPE_AUDIO\" },\n    { no: 6, name: \"OBJECT_TYPE_PODCAST\" },\n    { no: 7, name: \"OBJECT_TYPE_SITEMAP\" },\n    { no: 8, name: \"OBJECT_TYPE_PDF\" },\n    { no: 9, name: \"OBJECT_TYPE_EPUB\" },\n    { no: 10, name: \"OBJECT_TYPE_YOUTUBE\" },\n]);\n/**\n * @generated from enum operand.v1.AudioFileExt\n */\nexport var AudioFileExt;\n(function (AudioFileExt) {\n    /**\n     * @generated from enum value: AUDIO_FILE_EXT_UNSPECIFIED = 0;\n     */\n    AudioFileExt[AudioFileExt[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n    /**\n     * @generated from enum value: AUDIO_FILE_EXT_MP3 = 1;\n     */\n    AudioFileExt[AudioFileExt[\"MP3\"] = 1] = \"MP3\";\n    /**\n     * @generated from enum value: AUDIO_FILE_EXT_OGG = 2;\n     */\n    AudioFileExt[AudioFileExt[\"OGG\"] = 2] = \"OGG\";\n    /**\n     * @generated from enum value: AUDIO_FILE_EXT_FLAC = 3;\n     */\n    AudioFileExt[AudioFileExt[\"FLAC\"] = 3] = \"FLAC\";\n    /**\n     * @generated from enum value: AUDIO_FILE_EXT_WAV = 4;\n     */\n    AudioFileExt[AudioFileExt[\"WAV\"] = 4] = \"WAV\";\n    /**\n     * @generated from enum value: AUDIO_FILE_EXT_MP4 = 5;\n     */\n    AudioFileExt[AudioFileExt[\"MP4\"] = 5] = \"MP4\";\n})(AudioFileExt || (AudioFileExt = {}));\n// Retrieve enum metadata with: proto3.getEnumType(AudioFileExt)\nproto3.util.setEnumType(AudioFileExt, \"operand.v1.AudioFileExt\", [\n    { no: 0, name: \"AUDIO_FILE_EXT_UNSPECIFIED\" },\n    { no: 1, name: \"AUDIO_FILE_EXT_MP3\" },\n    { no: 2, name: \"AUDIO_FILE_EXT_OGG\" },\n    { no: 3, name: \"AUDIO_FILE_EXT_FLAC\" },\n    { no: 4, name: \"AUDIO_FILE_EXT_WAV\" },\n    { no: 5, name: \"AUDIO_FILE_EXT_MP4\" },\n]);\n/**\n * @generated from enum operand.v1.ObjectStatus\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * @generated from enum value: OBJECT_STATUS_UNSPECIFIED = 0;\n     */\n    ObjectStatus[ObjectStatus[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n    /**\n     * @generated from enum value: OBJECT_STATUS_QUEUED = 1;\n     */\n    ObjectStatus[ObjectStatus[\"QUEUED\"] = 1] = \"QUEUED\";\n    /**\n     * @generated from enum value: OBJECT_STATUS_INDEXING = 2;\n     */\n    ObjectStatus[ObjectStatus[\"INDEXING\"] = 2] = \"INDEXING\";\n    /**\n     * @generated from enum value: OBJECT_STATUS_READY = 3;\n     */\n    ObjectStatus[ObjectStatus[\"READY\"] = 3] = \"READY\";\n    /**\n     * @generated from enum value: OBJECT_STATUS_ERROR = 4;\n     */\n    ObjectStatus[ObjectStatus[\"ERROR\"] = 4] = \"ERROR\";\n})(ObjectStatus || (ObjectStatus = {}));\n// Retrieve enum metadata with: proto3.getEnumType(ObjectStatus)\nproto3.util.setEnumType(ObjectStatus, \"operand.v1.ObjectStatus\", [\n    { no: 0, name: \"OBJECT_STATUS_UNSPECIFIED\" },\n    { no: 1, name: \"OBJECT_STATUS_QUEUED\" },\n    { no: 2, name: \"OBJECT_STATUS_INDEXING\" },\n    { no: 3, name: \"OBJECT_STATUS_READY\" },\n    { no: 4, name: \"OBJECT_STATUS_ERROR\" },\n]);\n/**\n * @generated from message operand.v1.ObjectMetadata\n */\nexport class ObjectMetadata extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from oneof operand.v1.ObjectMetadata.value\n         */\n        this.value = { case: undefined };\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ObjectMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ObjectMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ObjectMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ObjectMetadata, a, b);\n    }\n}\nObjectMetadata.runtime = proto3;\nObjectMetadata.typeName = \"operand.v1.ObjectMetadata\";\nObjectMetadata.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"collection\", kind: \"message\", T: CollectionMetadata, oneof: \"value\" },\n    { no: 2, name: \"text\", kind: \"message\", T: TextMetadata, oneof: \"value\" },\n    { no: 3, name: \"html\", kind: \"message\", T: HTMLMetadata, oneof: \"value\" },\n    { no: 4, name: \"rss\", kind: \"message\", T: RSSMetadata, oneof: \"value\" },\n    { no: 5, name: \"audio\", kind: \"message\", T: AudioMetadata, oneof: \"value\" },\n    { no: 6, name: \"podcast\", kind: \"message\", T: PodcastMetadata, oneof: \"value\" },\n    { no: 7, name: \"sitemap\", kind: \"message\", T: SitemapMetadata, oneof: \"value\" },\n    { no: 8, name: \"pdf\", kind: \"message\", T: PDFMetadata, oneof: \"value\" },\n    { no: 9, name: \"epub\", kind: \"message\", T: EPUBMetadata, oneof: \"value\" },\n    { no: 10, name: \"youtube\", kind: \"message\", T: YouTubeMetadata, oneof: \"value\" },\n]);\n/**\n * @generated from message operand.v1.CollectionMetadata\n */\nexport class CollectionMetadata extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CollectionMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CollectionMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CollectionMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CollectionMetadata, a, b);\n    }\n}\nCollectionMetadata.runtime = proto3;\nCollectionMetadata.typeName = \"operand.v1.CollectionMetadata\";\nCollectionMetadata.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message operand.v1.TextMetadata\n */\nexport class TextMetadata extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string text = 1;\n         */\n        this.text = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TextMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TextMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TextMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TextMetadata, a, b);\n    }\n}\nTextMetadata.runtime = proto3;\nTextMetadata.typeName = \"operand.v1.TextMetadata\";\nTextMetadata.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"text\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message operand.v1.HTMLMetadata\n */\nexport class HTMLMetadata extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new HTMLMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new HTMLMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new HTMLMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(HTMLMetadata, a, b);\n    }\n}\nHTMLMetadata.runtime = proto3;\nHTMLMetadata.typeName = \"operand.v1.HTMLMetadata\";\nHTMLMetadata.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"html\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * The URL is stored in properties, not here.\n *\n * @generated from message operand.v1.RSSMetadata\n */\nexport class RSSMetadata extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new RSSMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new RSSMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new RSSMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(RSSMetadata, a, b);\n    }\n}\nRSSMetadata.runtime = proto3;\nRSSMetadata.typeName = \"operand.v1.RSSMetadata\";\nRSSMetadata.fields = proto3.util.newFieldList(() => []);\n/**\n * If the _url property is set, this metadata is auto-populated.\n *\n * @generated from message operand.v1.AudioMetadata\n */\nexport class AudioMetadata extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AudioMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AudioMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AudioMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AudioMetadata, a, b);\n    }\n}\nAudioMetadata.runtime = proto3;\nAudioMetadata.typeName = \"operand.v1.AudioMetadata\";\nAudioMetadata.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"file_ext\", kind: \"enum\", T: proto3.getEnumType(AudioFileExt), opt: true },\n    { no: 2, name: \"audio\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n]);\n/**\n * @generated from message operand.v1.PodcastMetadata\n */\nexport class PodcastMetadata extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string listennotes_id = 1;\n         */\n        this.listennotesId = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new PodcastMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new PodcastMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new PodcastMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(PodcastMetadata, a, b);\n    }\n}\nPodcastMetadata.runtime = proto3;\nPodcastMetadata.typeName = \"operand.v1.PodcastMetadata\";\nPodcastMetadata.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"listennotes_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n]);\n/**\n * @generated from message operand.v1.SitemapMetadata\n */\nexport class SitemapMetadata extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SitemapMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SitemapMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SitemapMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SitemapMetadata, a, b);\n    }\n}\nSitemapMetadata.runtime = proto3;\nSitemapMetadata.typeName = \"operand.v1.SitemapMetadata\";\nSitemapMetadata.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"url_regex\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * @generated from message operand.v1.PDFMetadata\n */\nexport class PDFMetadata extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new PDFMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new PDFMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new PDFMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(PDFMetadata, a, b);\n    }\n}\nPDFMetadata.runtime = proto3;\nPDFMetadata.typeName = \"operand.v1.PDFMetadata\";\nPDFMetadata.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"pdf\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n]);\n/**\n * @generated from message operand.v1.EPUBMetadata\n */\nexport class EPUBMetadata extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new EPUBMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new EPUBMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new EPUBMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(EPUBMetadata, a, b);\n    }\n}\nEPUBMetadata.runtime = proto3;\nEPUBMetadata.typeName = \"operand.v1.EPUBMetadata\";\nEPUBMetadata.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"epub\", kind: \"scalar\", T: 12 /* ScalarType.BYTES */, opt: true },\n]);\n/**\n * The URL is stored in properties, not here.\n *\n * @generated from message operand.v1.YouTubeMetadata\n */\nexport class YouTubeMetadata extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new YouTubeMetadata().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new YouTubeMetadata().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new YouTubeMetadata().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(YouTubeMetadata, a, b);\n    }\n}\nYouTubeMetadata.runtime = proto3;\nYouTubeMetadata.typeName = \"operand.v1.YouTubeMetadata\";\nYouTubeMetadata.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message operand.v1.Properties\n */\nexport class Properties extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: map<string, operand.v1.Property> properties = 1;\n         */\n        this.properties = {};\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Properties().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Properties().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Properties().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Properties, a, b);\n    }\n}\nProperties.runtime = proto3;\nProperties.typeName = \"operand.v1.Properties\";\nProperties.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"properties\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: { kind: \"message\", T: Property } },\n]);\n/**\n * @generated from message operand.v1.Property\n */\nexport class Property extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: bool indexed = 1;\n         */\n        this.indexed = false;\n        /**\n         * @generated from oneof operand.v1.Property.value\n         */\n        this.value = { case: undefined };\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Property().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Property().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Property().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Property, a, b);\n    }\n}\nProperty.runtime = proto3;\nProperty.typeName = \"operand.v1.Property\";\nProperty.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"indexed\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */ },\n    { no: 2, name: \"text\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, oneof: \"value\" },\n    { no: 3, name: \"number\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, oneof: \"value\" },\n    { no: 4, name: \"text_array\", kind: \"message\", T: TextArray, oneof: \"value\" },\n    { no: 5, name: \"number_array\", kind: \"message\", T: NumberArray, oneof: \"value\" },\n]);\n/**\n * @generated from message operand.v1.TextArray\n */\nexport class TextArray extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string values = 1;\n         */\n        this.values = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new TextArray().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new TextArray().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new TextArray().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(TextArray, a, b);\n    }\n}\nTextArray.runtime = proto3;\nTextArray.typeName = \"operand.v1.TextArray\";\nTextArray.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"values\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message operand.v1.NumberArray\n */\nexport class NumberArray extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated double values = 1;\n         */\n        this.values = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new NumberArray().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new NumberArray().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new NumberArray().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(NumberArray, a, b);\n    }\n}\nNumberArray.runtime = proto3;\nNumberArray.typeName = \"operand.v1.NumberArray\";\nNumberArray.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"values\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, repeated: true },\n]);\n/**\n * @generated from message operand.v1.ObjectPreview\n */\nexport class ObjectPreview extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ObjectPreview().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ObjectPreview().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ObjectPreview().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ObjectPreview, a, b);\n    }\n}\nObjectPreview.runtime = proto3;\nObjectPreview.typeName = \"operand.v1.ObjectPreview\";\nObjectPreview.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"title\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"description\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"image\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 4, name: \"url\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * @generated from message operand.v1.Object\n */\nexport class Object$ extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string id = 1;\n         */\n        this.id = \"\";\n        /**\n         * @generated from field: operand.v1.ObjectType type = 5;\n         */\n        this.type = ObjectType.UNSPECIFIED;\n        /**\n         * @generated from field: operand.v1.ObjectStatus status = 8;\n         */\n        this.status = ObjectStatus.UNSPECIFIED;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Object$().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Object$().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Object$().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Object$, a, b);\n    }\n}\nObject$.runtime = proto3;\nObject$.typeName = \"operand.v1.Object\";\nObject$.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"created_at\", kind: \"message\", T: Timestamp },\n    { no: 3, name: \"updated_at\", kind: \"message\", T: Timestamp, opt: true },\n    { no: 4, name: \"parent_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 5, name: \"type\", kind: \"enum\", T: proto3.getEnumType(ObjectType) },\n    { no: 6, name: \"metadata\", kind: \"message\", T: ObjectMetadata, opt: true },\n    { no: 7, name: \"properties\", kind: \"message\", T: Properties },\n    { no: 8, name: \"status\", kind: \"enum\", T: proto3.getEnumType(ObjectStatus) },\n    { no: 9, name: \"preview\", kind: \"message\", T: ObjectPreview, opt: true },\n]);\n/**\n * @generated from message operand.v1.ObjectOptions\n */\nexport class ObjectOptions extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ObjectOptions().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ObjectOptions().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ObjectOptions().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ObjectOptions, a, b);\n    }\n}\nObjectOptions.runtime = proto3;\nObjectOptions.typeName = \"operand.v1.ObjectOptions\";\nObjectOptions.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"include_metadata\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n    { no: 2, name: \"include_preview\", kind: \"scalar\", T: 8 /* ScalarType.BOOL */, opt: true },\n]);\n/**\n * @generated from message operand.v1.UpsertRequest\n */\nexport class UpsertRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpsertRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpsertRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpsertRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpsertRequest, a, b);\n    }\n}\nUpsertRequest.runtime = proto3;\nUpsertRequest.typeName = \"operand.v1.UpsertRequest\";\nUpsertRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"existing_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"parent_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"type\", kind: \"enum\", T: proto3.getEnumType(ObjectType), opt: true },\n    { no: 4, name: \"metadata\", kind: \"message\", T: ObjectMetadata, opt: true },\n    { no: 5, name: \"properties\", kind: \"message\", T: Properties, opt: true },\n    { no: 6, name: \"unique_property\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * @generated from message operand.v1.UpsertResponse\n */\nexport class UpsertResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new UpsertResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new UpsertResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new UpsertResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(UpsertResponse, a, b);\n    }\n}\nUpsertResponse.runtime = proto3;\nUpsertResponse.typeName = \"operand.v1.UpsertResponse\";\nUpsertResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"object\", kind: \"message\", T: Object$ },\n]);\n/**\n * @generated from message operand.v1.SuggestionsRequest\n */\nexport class SuggestionsRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string query = 1;\n         */\n        this.query = \"\";\n        /**\n         * @generated from field: operand.v1.ObjectType type = 2;\n         */\n        this.type = ObjectType.UNSPECIFIED;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SuggestionsRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SuggestionsRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SuggestionsRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SuggestionsRequest, a, b);\n    }\n}\nSuggestionsRequest.runtime = proto3;\nSuggestionsRequest.typeName = \"operand.v1.SuggestionsRequest\";\nSuggestionsRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"query\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"type\", kind: \"enum\", T: proto3.getEnumType(ObjectType) },\n]);\n/**\n * @generated from message operand.v1.SuggestionsResponse\n */\nexport class SuggestionsResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated operand.v1.SuggestionsResponse.AnnotatedUpsert upserts = 1;\n         */\n        this.upserts = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SuggestionsResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SuggestionsResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SuggestionsResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SuggestionsResponse, a, b);\n    }\n}\nSuggestionsResponse.runtime = proto3;\nSuggestionsResponse.typeName = \"operand.v1.SuggestionsResponse\";\nSuggestionsResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"upserts\", kind: \"message\", T: SuggestionsResponse_AnnotatedUpsert, repeated: true },\n]);\n/**\n * @generated from message operand.v1.SuggestionsResponse.AnnotatedUpsert\n */\nexport class SuggestionsResponse_AnnotatedUpsert extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string description = 2;\n         */\n        this.description = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SuggestionsResponse_AnnotatedUpsert().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SuggestionsResponse_AnnotatedUpsert().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SuggestionsResponse_AnnotatedUpsert().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SuggestionsResponse_AnnotatedUpsert, a, b);\n    }\n}\nSuggestionsResponse_AnnotatedUpsert.runtime = proto3;\nSuggestionsResponse_AnnotatedUpsert.typeName = \"operand.v1.SuggestionsResponse.AnnotatedUpsert\";\nSuggestionsResponse_AnnotatedUpsert.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"upsert\", kind: \"message\", T: UpsertRequest },\n    { no: 2, name: \"description\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"page_estimate\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n]);\n/**\n * @generated from message operand.v1.ListRequest\n */\nexport class ListRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListRequest, a, b);\n    }\n}\nListRequest.runtime = proto3;\nListRequest.typeName = \"operand.v1.ListRequest\";\nListRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"parent_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 2, name: \"cursor\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n    { no: 3, name: \"limit\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 4, name: \"options\", kind: \"message\", T: ObjectOptions, opt: true },\n]);\n/**\n * @generated from message operand.v1.ListResponse\n */\nexport class ListResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated operand.v1.Object objects = 1;\n         */\n        this.objects = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new ListResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new ListResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new ListResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(ListResponse, a, b);\n    }\n}\nListResponse.runtime = proto3;\nListResponse.typeName = \"operand.v1.ListResponse\";\nListResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"objects\", kind: \"message\", T: Object$, repeated: true },\n    { no: 2, name: \"next_cursor\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * @generated from message operand.v1.GetRequest\n */\nexport class GetRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string ids = 1;\n         */\n        this.ids = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetRequest, a, b);\n    }\n}\nGetRequest.runtime = proto3;\nGetRequest.typeName = \"operand.v1.GetRequest\";\nGetRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n    { no: 2, name: \"options\", kind: \"message\", T: ObjectOptions, opt: true },\n]);\n/**\n * @generated from message operand.v1.GetResponse\n */\nexport class GetResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated operand.v1.Object objects = 1;\n         */\n        this.objects = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new GetResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new GetResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new GetResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(GetResponse, a, b);\n    }\n}\nGetResponse.runtime = proto3;\nGetResponse.typeName = \"operand.v1.GetResponse\";\nGetResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"objects\", kind: \"message\", T: Object$, repeated: true },\n]);\n/**\n * @generated from message operand.v1.DeleteRequest\n */\nexport class DeleteRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated string ids = 1;\n         */\n        this.ids = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteRequest, a, b);\n    }\n}\nDeleteRequest.runtime = proto3;\nDeleteRequest.typeName = \"operand.v1.DeleteRequest\";\nDeleteRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"ids\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n/**\n * @generated from message operand.v1.DeleteResponse\n */\nexport class DeleteResponse extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new DeleteResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new DeleteResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new DeleteResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(DeleteResponse, a, b);\n    }\n}\nDeleteResponse.runtime = proto3;\nDeleteResponse.typeName = \"operand.v1.DeleteResponse\";\nDeleteResponse.fields = proto3.util.newFieldList(() => []);\n/**\n * @generated from message operand.v1.CountRequest\n */\nexport class CountRequest extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CountRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CountRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CountRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CountRequest, a, b);\n    }\n}\nCountRequest.runtime = proto3;\nCountRequest.typeName = \"operand.v1.CountRequest\";\nCountRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"parent_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, opt: true },\n]);\n/**\n * @generated from message operand.v1.CountResponse\n */\nexport class CountResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: int32 count = 1;\n         */\n        this.count = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new CountResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new CountResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new CountResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(CountResponse, a, b);\n    }\n}\nCountResponse.runtime = proto3;\nCountResponse.typeName = \"operand.v1.CountResponse\";\nCountResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"count\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */ },\n]);\n/**\n * @generated from message operand.v1.Filter\n */\nexport class Filter extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated operand.v1.Condition conditions = 1;\n         */\n        this.conditions = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Filter().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Filter().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Filter().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Filter, a, b);\n    }\n}\nFilter.runtime = proto3;\nFilter.typeName = \"operand.v1.Filter\";\nFilter.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"conditions\", kind: \"message\", T: Condition, repeated: true },\n]);\n/**\n * @generated from message operand.v1.NotCondition\n */\nexport class NotCondition extends Message {\n    constructor(data) {\n        super();\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new NotCondition().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new NotCondition().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new NotCondition().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(NotCondition, a, b);\n    }\n}\nNotCondition.runtime = proto3;\nNotCondition.typeName = \"operand.v1.NotCondition\";\nNotCondition.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"condition\", kind: \"message\", T: Condition },\n]);\n/**\n * @generated from message operand.v1.Condition\n */\nexport class Condition extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from oneof operand.v1.Condition.condition\n         */\n        this.condition = { case: undefined };\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Condition().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Condition().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Condition().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Condition, a, b);\n    }\n}\nCondition.runtime = proto3;\nCondition.typeName = \"operand.v1.Condition\";\nCondition.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"property\", kind: \"message\", T: KeyedProperty, oneof: \"condition\" },\n    { no: 2, name: \"range\", kind: \"message\", T: Range, oneof: \"condition\" },\n    { no: 3, name: \"and\", kind: \"message\", T: Filter, oneof: \"condition\" },\n    { no: 4, name: \"or\", kind: \"message\", T: Filter, oneof: \"condition\" },\n    { no: 5, name: \"not\", kind: \"message\", T: NotCondition, oneof: \"condition\" },\n]);\n/**\n * @generated from message operand.v1.KeyedProperty\n */\nexport class KeyedProperty extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string key = 1;\n         */\n        this.key = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new KeyedProperty().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new KeyedProperty().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new KeyedProperty().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(KeyedProperty, a, b);\n    }\n}\nKeyedProperty.runtime = proto3;\nKeyedProperty.typeName = \"operand.v1.KeyedProperty\";\nKeyedProperty.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"property\", kind: \"message\", T: Property },\n]);\n/**\n * @generated from message operand.v1.Range\n */\nexport class Range extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string key = 1;\n         */\n        this.key = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Range().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Range().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Range().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Range, a, b);\n    }\n}\nRange.runtime = proto3;\nRange.typeName = \"operand.v1.Range\";\nRange.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"key\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"lt\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, opt: true },\n    { no: 3, name: \"lte\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, opt: true },\n    { no: 4, name: \"gt\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, opt: true },\n    { no: 5, name: \"gte\", kind: \"scalar\", T: 1 /* ScalarType.DOUBLE */, opt: true },\n]);\n/**\n * @generated from message operand.v1.SearchWithinRequest\n */\nexport class SearchWithinRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string query = 1;\n         */\n        this.query = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SearchWithinRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SearchWithinRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SearchWithinRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SearchWithinRequest, a, b);\n    }\n}\nSearchWithinRequest.runtime = proto3;\nSearchWithinRequest.typeName = \"operand.v1.SearchWithinRequest\";\nSearchWithinRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"query\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"limit\", kind: \"scalar\", T: 5 /* ScalarType.INT32 */, opt: true },\n    { no: 3, name: \"filter\", kind: \"message\", T: Filter, opt: true },\n    { no: 4, name: \"object_options\", kind: \"message\", T: ObjectOptions, opt: true },\n]);\n/**\n * @generated from message operand.v1.SearchWithinResponse\n */\nexport class SearchWithinResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated operand.v1.SearchWithinResponse.Match matches = 1;\n         */\n        this.matches = [];\n        /**\n         * @generated from field: map<string, operand.v1.Object> objects = 2;\n         */\n        this.objects = {};\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SearchWithinResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SearchWithinResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SearchWithinResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SearchWithinResponse, a, b);\n    }\n}\nSearchWithinResponse.runtime = proto3;\nSearchWithinResponse.typeName = \"operand.v1.SearchWithinResponse\";\nSearchWithinResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"matches\", kind: \"message\", T: SearchWithinResponse_Match, repeated: true },\n    { no: 2, name: \"objects\", kind: \"map\", K: 9 /* ScalarType.STRING */, V: { kind: \"message\", T: Object$ } },\n]);\n/**\n * @generated from message operand.v1.SearchWithinResponse.Match\n */\nexport class SearchWithinResponse_Match extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: int64 match_id = 1;\n         */\n        this.matchId = protoInt64.zero;\n        /**\n         * @generated from field: string object_id = 2;\n         */\n        this.objectId = \"\";\n        /**\n         * @generated from field: string content = 3;\n         */\n        this.content = \"\";\n        /**\n         * @generated from field: float score = 4;\n         */\n        this.score = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new SearchWithinResponse_Match().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new SearchWithinResponse_Match().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new SearchWithinResponse_Match().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(SearchWithinResponse_Match, a, b);\n    }\n}\nSearchWithinResponse_Match.runtime = proto3;\nSearchWithinResponse_Match.typeName = \"operand.v1.SearchWithinResponse.Match\";\nSearchWithinResponse_Match.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"match_id\", kind: \"scalar\", T: 3 /* ScalarType.INT64 */ },\n    { no: 2, name: \"object_id\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 3, name: \"content\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 4, name: \"score\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n    { no: 5, name: \"extra\", kind: \"message\", T: Properties, opt: true },\n]);\n/**\n * Answer is an attempt to answer a question.\n *\n * @generated from message operand.v1.Answer\n */\nexport class Answer extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string answer = 1;\n         */\n        this.answer = \"\";\n        /**\n         * Confidence is a value between 0 and 1, where 1 is the highest confidence.\n         * It indicates how confident we are that the answer is factually correct, using\n         * the index content as the ground truth.\n         *\n         * @generated from field: float confidence = 2;\n         */\n        this.confidence = 0;\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new Answer().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new Answer().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new Answer().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(Answer, a, b);\n    }\n}\nAnswer.runtime = proto3;\nAnswer.typeName = \"operand.v1.Answer\";\nAnswer.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"answer\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"confidence\", kind: \"scalar\", T: 2 /* ScalarType.FLOAT */ },\n]);\n/**\n * @generated from message operand.v1.AnswerRequest\n */\nexport class AnswerRequest extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: string query = 1;\n         */\n        this.query = \"\";\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AnswerRequest().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AnswerRequest().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AnswerRequest().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AnswerRequest, a, b);\n    }\n}\nAnswerRequest.runtime = proto3;\nAnswerRequest.typeName = \"operand.v1.AnswerRequest\";\nAnswerRequest.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"query\", kind: \"scalar\", T: 9 /* ScalarType.STRING */ },\n    { no: 2, name: \"filter\", kind: \"message\", T: Filter, opt: true },\n    { no: 3, name: \"object_options\", kind: \"message\", T: ObjectOptions, opt: true },\n]);\n/**\n * @generated from message operand.v1.AnswerResponse\n */\nexport class AnswerResponse extends Message {\n    constructor(data) {\n        super();\n        /**\n         * @generated from field: repeated operand.v1.Object sources = 2;\n         */\n        this.sources = [];\n        proto3.util.initPartial(data, this);\n    }\n    static fromBinary(bytes, options) {\n        return new AnswerResponse().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new AnswerResponse().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new AnswerResponse().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return proto3.util.equals(AnswerResponse, a, b);\n    }\n}\nAnswerResponse.runtime = proto3;\nAnswerResponse.typeName = \"operand.v1.AnswerResponse\";\nAnswerResponse.fields = proto3.util.newFieldList(() => [\n    { no: 1, name: \"answer\", kind: \"message\", T: Answer, opt: true },\n    { no: 2, name: \"sources\", kind: \"message\", T: Object$, repeated: true },\n]);\n","// @generated by protoc-gen-connect-web v0.2.1 with parameter \"target=ts\"\n// @generated from file operand/v1/object.proto (package operand.v1, syntax proto3)\n/* eslint-disable */\n/* @ts-nocheck */\nimport { AnswerRequest, AnswerResponse, CountRequest, CountResponse, DeleteRequest, DeleteResponse, GetRequest, GetResponse, ListRequest, ListResponse, SearchWithinRequest, SearchWithinResponse, SuggestionsRequest, SuggestionsResponse, UpsertRequest, UpsertResponse } from \"./object_pb.js\";\nimport { MethodKind } from \"@bufbuild/protobuf\";\n/**\n * ObjectService is the user-facing API for doing operations on objects themselves, within an index.\n * To use this service, must pass `Operand-Index-ID` as a header, which specifies the index to use.\n * The API key, passed by the `Authorization`, must have appropriate permissions to access the index.\n *\n * @generated from service operand.v1.ObjectService\n */\nexport const ObjectService = {\n    typeName: \"operand.v1.ObjectService\",\n    methods: {\n        /**\n         * Upsert inserts or updates an object within the index.\n         *\n         * @generated from rpc operand.v1.ObjectService.Upsert\n         */\n        upsert: {\n            name: \"Upsert\",\n            I: UpsertRequest,\n            O: UpsertResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Suggestions returns a list of suggested objects that the user may choose to index\n         * based on the given query. For example, if the user is trying to index a podcast,\n         * and they pass in the name, we return a list of podcasts that we could index for them\n         * based on the name. This typically searches external resources, i.e. APIs.\n         *\n         * @generated from rpc operand.v1.ObjectService.Suggestions\n         */\n        suggestions: {\n            name: \"Suggestions\",\n            I: SuggestionsRequest,\n            O: SuggestionsResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * List lists objects within the index.\n         *\n         * @generated from rpc operand.v1.ObjectService.List\n         */\n        list: {\n            name: \"List\",\n            I: ListRequest,\n            O: ListResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Get gets one or more objects from the index by their ID.\n         *\n         * @generated from rpc operand.v1.ObjectService.Get\n         */\n        get: {\n            name: \"Get\",\n            I: GetRequest,\n            O: GetResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Delete deletes one or more objects from the index by their ID.\n         *\n         * @generated from rpc operand.v1.ObjectService.Delete\n         */\n        delete: {\n            name: \"Delete\",\n            I: DeleteRequest,\n            O: DeleteResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Count counts the objects in the index.\n         *\n         * @generated from rpc operand.v1.ObjectService.Count\n         */\n        count: {\n            name: \"Count\",\n            I: CountRequest,\n            O: CountResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * SearchWithin searches for content within objects themselves, returning small snippets of\n         * relevant content to the search query, along with the relevant objects themselves.\n         *\n         * @generated from rpc operand.v1.ObjectService.SearchWithin\n         */\n        searchWithin: {\n            name: \"SearchWithin\",\n            I: SearchWithinRequest,\n            O: SearchWithinResponse,\n            kind: MethodKind.Unary,\n        },\n        /**\n         * Answer generates a natural language to a question, using the content of the index as the\n         * ground truth. If we don't have a good answer, we don't answer.\n         *\n         * @generated from rpc operand.v1.ObjectService.Answer\n         */\n        answer: {\n            name: \"Answer\",\n            I: AnswerRequest,\n            O: AnswerResponse,\n            kind: MethodKind.Unary,\n        },\n    }\n};\n","// The background worker for the extension\n// Handles a variety of events, including:\n// - installs\n// - uninstalls\n// - omnibox events and queries\n// - newtab redirects\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getApiKey, getRules, getSetting, getSettings, setSettings, } from '../../storage';\nimport { operandClient, ObjectService, ObjectType } from '@operandinc/sdk';\n// On Install\nchrome.runtime.onInstalled.addListener(function () { return __awaiter(void 0, void 0, void 0, function () {\n    var token;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                console.log('Installed!');\n                // Set some default settings\n                return [4 /*yield*/, setSettings({\n                        apiKey: '',\n                        searchInjectionEnabled: true,\n                        automaticIndexingDestination: '',\n                        automaticIndexingEnabled: false,\n                        newTabFeedEnabled: true,\n                        manualIndexingMostRecentDestination: '',\n                    })];\n            case 1:\n                // Set some default settings\n                _a.sent();\n                return [4 /*yield*/, getApiKey()];\n            case 2:\n                token = _a.sent();\n                if (!token || token === '') {\n                    chrome.runtime.openOptionsPage();\n                }\n                return [2 /*return*/];\n        }\n    });\n}); });\n// Ombnibox\nchrome.omnibox.onInputEntered.addListener(function (text) {\n    if (!text)\n        return;\n    var newURL = 'http://beta.operand.ai/feed?q=' + text;\n    chrome.tabs.create({ url: newURL });\n});\nvar ignorePrefixes = [\n    'chrome://',\n    'chrome-extension://',\n    'about:',\n    'http://localhost',\n    'https://www.google.com/search',\n    'https://beta.operand.ai/',\n];\n// New Tab\nchrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\n    return __awaiter(this, void 0, void 0, function () {\n        var newTabFeedEnabled, blocked, settings, client, url, cleanUrl;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(tab.url === 'chrome://newtab/')) return [3 /*break*/, 2];\n                    return [4 /*yield*/, getSetting('newTabFeedEnabled')];\n                case 1:\n                    newTabFeedEnabled = _a.sent();\n                    // If the new tab redirect is disabled\n                    if (newTabFeedEnabled !== true) {\n                        // Redirect to the regular new tab page\n                        chrome.tabs.update(tabId, {\n                            url: 'chrome-search://local-ntp/local-ntp.html',\n                        });\n                    }\n                    return [3 /*break*/, 5];\n                case 2:\n                    if (!(changeInfo.status === 'complete')) return [3 /*break*/, 5];\n                    if (ignorePrefixes.some(function (prefix) { var _a; return (_a = tab.url) === null || _a === void 0 ? void 0 : _a.startsWith(prefix); })) {\n                        return [2 /*return*/];\n                    }\n                    blocked = false;\n                    return [4 /*yield*/, getRules().then(function (rules) {\n                            if (rules) {\n                                console.log('Rules', rules);\n                                for (var _i = 0, rules_1 = rules; _i < rules_1.length; _i++) {\n                                    var rule = rules_1[_i];\n                                    // Get the domain\n                                    var url_1 = new URL(tab.url);\n                                    // If the domain matches the rule\n                                    // maybe add a bunch of print statements and debug?\n                                    if (url_1.host === rule.domain ||\n                                        url_1.hostname === rule.domain ||\n                                        url_1.origin === rule.domain) {\n                                        blocked = true;\n                                    }\n                                }\n                            }\n                        })];\n                case 3:\n                    _a.sent();\n                    if (blocked) {\n                        return [2 /*return*/];\n                    }\n                    return [4 /*yield*/, getSettings()];\n                case 4:\n                    settings = _a.sent();\n                    if (!settings) {\n                        return [2 /*return*/];\n                    }\n                    // If the API key is not set\n                    if (!settings.apiKey || !settings.automaticIndexingEnabled) {\n                        return [2 /*return*/];\n                    }\n                    client = operandClient(ObjectService, settings.apiKey, 'https://api.operand.ai');\n                    if (!tab.url) {\n                        return [2 /*return*/];\n                    }\n                    url = new URL(tab.url);\n                    cleanUrl = \"\".concat(url.protocol, \"//\").concat(url.host).concat(url.pathname);\n                    client.upsert({\n                        type: ObjectType.HTML,\n                        metadata: {\n                            value: {\n                                case: 'html',\n                                value: {\n                                    html: undefined,\n                                },\n                            },\n                        },\n                        properties: {\n                            properties: {\n                                _url: {\n                                    indexed: false,\n                                    value: {\n                                        case: 'text',\n                                        value: cleanUrl,\n                                    },\n                                },\n                            },\n                        },\n                        uniqueProperty: '_url',\n                    }, {\n                        headers: {\n                            'Operand-Index-Id': settings.automaticIndexingDestination,\n                        },\n                    });\n                    _a.label = 5;\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n});\n"],"names":["global","self","this","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","MethodKind","MethodIdempotency","__awaiter","_arguments","P","generator","fulfilled","step","apply","__generator","f","y","t","g","_","label","sent","trys","ops","verb","n","v","op","pop","validateSettings","settings","stringSettings","_i","booleanSettings_1","_a","stringSettings_1","_b","getSettings","storage","chrome","sync","getSetting","getApiKey","setSettings","getRules","rules","codeFromConnectHttpStatus","httpStatus","InvalidArgument","Unauthenticated","PermissionDenied","Unimplemented","DeadlineExceeded","Aborted","FailedPrecondition","ResourceExhausted","Internal","Unavailable","Unknown","codeToString","substring","c","stringToCode","Code","encTable","decTable","charCodeAt","dec","base64Str","es","b","bytePos","groupPos","p","subarray","enc","base64","assert","condition","msg","assertInt32","arg","Number","isInteger","assertUInt32","assertFloat32","isFinite","enumTypeSymbol","getEnumType","enumObject","setEnumType","typeName","opt","makeEnumType","no","localName","_opt","names","numbers","normalValues","normalizeEnumValue","findName","findNumber","makeEnum","assign","equals","other","getType","runtime","util","fromBinary","format","bin","makeReadOptions","readMessage","readerFactory","fromJson","jsonValue","fromJsonString","jsonString","toBinary","makeWriteOptions","writer","writerFactory","writeMessage","finish","toJson","toJsonString","stringify","prettySpaces","getPrototypeOf","ScalarType","varint64read","lowBits","highBits","pos","assertBounds","middleByte","varint64write","lo","hi","hasNext","byte","splitBits","hasMoreBits","TWO_PWR_32_DBL","int64FromString","minus","base","add1e6digit","begin","end","digit1e6","negate","newBits","uInt64ToString","toUnsigned","mid","high","digitA","digitB","digitC","Math","floor","decimalFrom1e7WithLeadingZeros","digit1e7","partial","varint32write","varint32read","readBytes","protoInt64","dv","globalThis","BigInt","getBigInt64","getBigUint64","setBigInt64","setBigUint64","process","env","BUF_BIGINT_DISABLE","MIN","MAX","UMIN","UMAX","zero","supported","bi","uParse","getInt32","uEnc","setInt32","uDec","assertInt64String","assertUInt64String","bits","negative","int64ToString","makeInt64Support","WireType","BinaryWriter","textEncoder","TextEncoder","chunks","len","offset","fork","chunk","prev","uint32","raw","tag","fieldNo","int32","bool","string","encode","float","setFloat32","double","setFloat64","fixed32","setUint32","sfixed32","sint32","sfixed64","tc","fixed64","int64","sint64","sign","uint64","BinaryReader","textDecoder","varint64","byteOffset","TextDecoder","wireType","skip","start","Varint","Bit64","Bit32","LengthDelimited","StartGroup","EndGroup","zze","s","getUint32","getFloat32","getFloat64","wrapField","fieldWrapper","unwrapField","DOUBLE","FLOAT","INT64","UINT64","INT32","UINT32","BOOL","STRING","BYTES","scalarEquals","a","FIXED64","SFIXED64","SINT64","scalarDefaultValue","scalarTypeInfo","isUndefined","isIntrinsicDefault","FIXED32","SFIXED32","unknownFieldsSymbol","readDefaults","readUnknownFields","writeDefaults","writeUnknownFields","readMapEntry","field","val","readScalar","K","V","kind","T","keyRaw","writeMapEntry","keyValue","SINT32","parseInt","writeScalar","writeMessageField","emitIntrinsicDefault","writePacked","jsonReadDefaults","ignoreUnknownFields","jsonWriteDefaults","emitDefaultValues","enumAsInteger","useProtoFieldName","debugJsonValue","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","isNaN","encodeURIComponent","readEnum","writeEnum","cloneSingularField","InternalFieldList","fields","normalizer","_fields","_normalizer","findJsonName","jsonName","jsonNames","list","find","all","byNumber","numbersAsc","concat","sort","byMember","members","o","oneof","localFieldName","protoName","inOneof","protoCamelCase","reservedObjectProperties","reservedMessageProperties","localOneofName","fieldJsonName","snakeCase","capNext","charAt","toJSON","valueOf","toObject","InternalOneofInfo","repeated","packed","default","addField","findField","_lookup","proto3","syntax","makeWriteField","writeField","debug","oneofSeen","jsonKey","target","seen","case","targetArray","jsonItem","m","targetMap","jsonMapKey","jsonMapValue","messageType","targetMessage","enumValue","member","r","makeJsonFormatCommon","jsonObj","entryKey","entryValue","enumType","jsonArr","listUnknownFields","discardUnknownFields","data","onUnknownField","scalarType","arr","mapKey","mapVal","item","initPartial","source","sk","sourceField","k","mt","every","va","vb","some","any","copy","newFieldList","normalizeFieldInfosProto3","initFields","makeMessageType","lastIndexOf","setPrototypeOf","fieldInfos","_c","ooname","code","details","metadata","super","createMessage","rawMessage","connectErrorFromJson","newParseError","codeFromString","detail","typeUrl","connectErrorFromReason","reason","valueOrError","property","d","applyInterceptors","interceptors","reverse","reduce","encodeEnvelope","envelope","flags","l","mergeHeaders","h","createConnectTransport","assertFetchApi","useBinaryFormat","async","service","timeoutMs","req","stream","baseUrl","createConnectRequestHeaders","I","AbortController","unaryRequest","createConnectRequestBody","jsonOptions","demuxHeaderTrailers","expectContentType","demuxedHeader","demuxedTrailer","O","binaryOptions","trailer","ReadableStream","getReader","controller","read","close","enqueue","createEnvelopeReadableStream","endStreamReceived","endStreamResponseFlag","endStream","endStreamFromJson","methodKind","encoded","Unary","envelopes","previousValue","currentValue","encodeEnvelopes","contentType","binaryFormat","match","gotBinaryFormat","startsWith","createPromiseClient","transport","createMethod","client","methodInfo","makeAnyClient","requestMessage","unary","onHeader","onTrailer","createUnaryFn","ServerStreaming","streamResponse","asyncIterator","serverStream","createServerStreamingFn","createHeaderInterceptor","operandClient","apiKey","endpoint","extraHeaders","forceFetchTransport","Authorization","hasFetchApi","_signal","_timeoutMs","_header","createRequestBody","console","warn","_service","_method","_message","createNodeFetchTransport","Timestamp","seconds","nanos","matches","ms","Date","repeat","z","nanosStr","toISOString","toDate","ceil","static","fromDate","date","getTime","ObjectType","AudioFileExt","ObjectStatus","ObjectMetadata","CollectionMetadata","TextMetadata","HTMLMetadata","RSSMetadata","AudioMetadata","PodcastMetadata","SitemapMetadata","PDFMetadata","EPUBMetadata","YouTubeMetadata","listennotesId","Properties","properties","Property","indexed","TextArray","NumberArray","ObjectPreview","Object$","id","UNSPECIFIED","ObjectOptions","UpsertRequest","UpsertResponse","SuggestionsRequest","query","SuggestionsResponse","upserts","SuggestionsResponse_AnnotatedUpsert","description","ListRequest","ListResponse","objects","GetRequest","ids","GetResponse","DeleteRequest","DeleteResponse","CountRequest","CountResponse","count","Filter","conditions","Condition","NotCondition","KeyedProperty","Range","SearchWithinRequest","SearchWithinResponse","SearchWithinResponse_Match","matchId","objectId","content","score","Answer","answer","confidence","AnswerRequest","AnswerResponse","sources","ObjectService","upsert","suggestions","delete","searchWithin","onInstalled","addListener","token","log","searchInjectionEnabled","automaticIndexingDestination","automaticIndexingEnabled","newTabFeedEnabled","manualIndexingMostRecentDestination","openOptionsPage","omnibox","onInputEntered","newURL","tabs","ignorePrefixes","onUpdated","tabId","changeInfo","tab","blocked","cleanUrl","update","prefix","rules_1","rule","url_1","URL","host","domain","hostname","origin","protocol","pathname","HTML","html","_url","uniqueProperty"],"sourceRoot":""}